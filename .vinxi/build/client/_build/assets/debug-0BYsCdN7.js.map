{"version":3,"file":"debug-0BYsCdN7.js","sources":["../../../../../src/routes/debug.tsx?pick=default&pick=$css"],"sourcesContent":["import { createEffect, createSignal } from \"solid-js\";\nimport { isServer } from \"solid-js/web\";\nimport { toast } from \"~/components/Toast\";\nimport { useSyncStore } from \"~/stores/syncStore\";\nimport { createSharedServicePort, SharedService } from \"~/utils/SharedService\";\n\nexport default function Debug() {\n  const sync = useSyncStore();\n\n  const isWebWorkerSupported = () => {\n    if (isServer) return false;\n    return typeof Worker !== \"undefined\";\n  }\n\n  const isOPFSSupported = async () => {\n    if (isServer) return false;\n    try {\n      await navigator.storage.getDirectory();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  const isWebRTCSupported = async () => {\n    if (isServer) return false;\n    try {\n      await navigator.mediaDevices.getUserMedia({ audio: true });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const isServiceWorkerSupported = () => {\n    if (isServer) return false;\n    return typeof navigator.serviceWorker !== \"undefined\";\n  }\n  const isServiceWorkerEnabled =async () => {\n    if (isServer) return false;\n    return await fetch(\"/clientId\").then((res) => res.ok);\n  }\n\n  const isLocksSupported = () => {\n    if (isServer) return false;\n    return typeof navigator.locks !== \"undefined\";\n  }\n  const isPersistentStorageSupported = () => {\n    if (isServer) return false;\n    return typeof navigator.storage.persist !== \"undefined\";\n  }\n  const isPersistentStorageEnabled = async () => {\n    if (isServer) return false;\n    return await navigator.storage.persisted();\n  }\n\n  const enablePersistentStorage = async () => {\n    if (isServer) return false;\n    await navigator.storage.persist().then((granted) => {\n      if (granted) {\n        toast.success(\"Persistent storage enabled\");\n        setPersistentStorageEnabled(true);\n      } else {\n        toast.error(\"Persistent storage not enabled\");\n      }\n    });\n  }\n\n  const isMessageChannelSupported = () => {\n    if (isServer) return false;\n    return typeof MessageChannel !== \"undefined\";\n  }\n\n  const isBroadcastChannelSupported = () => {\n    if (isServer) return false;\n    return typeof BroadcastChannel !== \"undefined\";\n  }\n\n  const isCreateSyncAccessHandleEnabled = async () => {\n    if (isServer) return false;\n    const workerScript = `\n    self.onmessage = async () => {\n    console.log(\"worker\");\n    try {\n    console.log(\"trying to get directory\");\n    const handle = await navigator.storage.getDirectory();\n    const file = await handle.getFileHandle(\"test.txt\", { create: true });\n    console.log(\"got file\");\n    const accessHandle = await file.createSyncAccessHandle();\n    console.log(\"got access handle\");\n    accessHandle.write(new TextEncoder().encode(\"test\"));\n    accessHandle.flush();\n    accessHandle.close();\n    console.log(\"wrote to file\");\n    self.postMessage(true);\n    } catch (e) {\n      console.error(\"Error while creating sync access handle\", e);\n      self.postMessage(false);\n    }\n    }\n    `;\n    const worker = new Worker(URL.createObjectURL(new Blob([workerScript])));\n    return new Promise<boolean>((resolve) => {\n      worker.onmessage = (e) => {\n        resolve(e.data);\n      };\n      worker.postMessage(\"\");\n    }\n    );\n\n  }\n  const isSharedServiceWorking = async () => {\n    if (isServer) return false;\n    const workerScript = `\n    self.onmessage = async () => {\n        self.postMessage(true);\n    }\n    `;\n    const worker = new Worker(URL.createObjectURL(new Blob([workerScript])));\n\n    const sharedService = new SharedService(\"test\", () => {\n      return createSharedServicePort({\n        read: async () => {\n          console.log(\"Calling read\");\n          return new Promise((resolve, reject) => {\n\n            const messageHandler = (event: MessageEvent) => {\n              resolve(event.data);\n              worker?.removeEventListener(\"message\", messageHandler);\n            };\n\n            const errorHandler = (error: Event) => {\n              if (error instanceof ErrorEvent) {\n                reject(error);\n              }\n              worker?.removeEventListener(\"error\", errorHandler);\n            };\n            worker.onerror = errorHandler;\n            worker.onmessage = messageHandler;\n\n            worker.postMessage(\"\");\n          });\n        }\n      });\n    });\n\n    return new Promise<boolean>(async (resolve) => {\n    try {\n    await sharedService.activate(async () => {\n      const res = await sharedService?.proxy[\"read\"]();\n      console.log(\"res\", res);\n      resolve(res === true);\n    });\n    } catch (e) {\n      console.error(\"Error connecting to shared service\", e);\n      resolve(false);\n    }\n    });\n\n  }\n\n\n\n\n\n\n  const [opfsSupported, setOPFSSupported] = createSignal(false);\n  const [webRTCSupported, setWebRTCSupported] = createSignal(false);\n  const [serviceWorkerEnabled, setServiceWorkerEnabled] = createSignal(false);\n  const [persistentStorageEnabled, setPersistentStorageEnabled] = createSignal(false);\n  const [webWorkerSupported, setWebWorkerSupported] = createSignal(false);\n  const [locksSupported, setLocksSupported] = createSignal(false);\n  const [persistentStorageSupported, setPersistentStorageSupported] = createSignal(false);\n  const [serviceWorkerSupported, setServiceWorkerSupported] = createSignal(false);\n  const [createSyncAccessHandleEnabled, setCreateSyncAccessHandleEnabled] = createSignal(false);\n  const [messageChannelSupported, setMessageChannelSupported] = createSignal(false);\n  const [broadcastChannelSupported, setBroadcastChannelSupported] = createSignal(false);\n  const [sharedServiceWorking, setSharedServiceWorking] = createSignal(false);\n\n\n  createEffect(async () => {\n    setOPFSSupported(await isOPFSSupported());\n    setWebRTCSupported(await isWebRTCSupported());\n    setServiceWorkerEnabled(await isServiceWorkerEnabled());\n    setPersistentStorageEnabled(await isPersistentStorageEnabled());\n    setWebWorkerSupported(isWebWorkerSupported());\n    setLocksSupported(isLocksSupported());\n    setPersistentStorageSupported(isPersistentStorageSupported());\n    setServiceWorkerSupported(isServiceWorkerSupported());\n    setCreateSyncAccessHandleEnabled(await isCreateSyncAccessHandleEnabled());\n    setMessageChannelSupported(isMessageChannelSupported());\n    setBroadcastChannelSupported(isBroadcastChannelSupported());\n    setSharedServiceWorking(await isSharedServiceWorking());\n\n  });\n\n\n\n  return (\n    <div class=\"p-4\">   \n      <h1 class=\"text-2xl font-bold\">Debug</h1>\n      <div class=\"flex flex-col space-y-2\">\n        <div class=\"flex flex-col space-y-1\">\n          <div class=\"flex flex-row justify-between\">\n            <div class=\"font-bold\">Web Worker</div>\n            <div>{webWorkerSupported() ? \"Supported\" : \"Not supported\"}</div>\n          </div>\n          <div class=\"flex flex-row justify-between\">\n            <div class=\"font-bold\">OPFS</div>\n            <div>{opfsSupported() ? \"Supported\" : \"Not supported\"}</div>\n          </div>\n          <div class=\"flex flex-row justify-between\">\n            <div class=\"font-bold\">WebRTC</div>\n            <div>{webRTCSupported() ? \"Supported\" : \"Not supported\"}</div>\n          </div>\n          <div class=\"flex flex-row justify-between\">\n            <div class=\"font-bold\">Service Worker</div>\n            <div>{serviceWorkerSupported() ? \"Supported\" : \"Not supported\"}</div>\n          </div>\n          <div class=\"flex flex-row justify-between\">\n            <div class=\"font-bold\">Service Worker Enabled</div>\n            <div>{serviceWorkerEnabled() ? \"Enabled\" : \"Not enabled\"}</div>\n          </div>\n          <div class=\"flex flex-row justify-between\">\n            <div class=\"font-bold\">Locks</div>\n            <div>{locksSupported() ? \"Supported\" : \"Not supported\"}</div>\n          </div>\n          <div class=\"flex flex-row justify-between\">\n            <div class=\"font-bold\">Persistent Storage</div>\n            <div>{persistentStorageSupported() ? \"Supported\" : \"Not supported\"}</div>\n          </div>\n          <div class=\"flex flex-row justify-between\">\n            <div class=\"font-bold\">Persistent Storage Enabled</div>\n            <div>{persistentStorageEnabled() ? \"Enabled\" : \"Not enabled\"}</div>\n            <span class=\"cursor-pointer underline text-primary\" onClick={enablePersistentStorage}>Enable</span>\n          </div>\n          <div class=\"flex flex-row justify-between\">\n            <div class=\"font-bold\">Create Sync Access Handle</div>\n            <div>{createSyncAccessHandleEnabled() ? \"Enabled\" : \"Not enabled\"}</div>\n          </div>\n          <div class=\"flex flex-row justify-between\">\n            <div class=\"font-bold\">Message Channel</div>\n            <div>{messageChannelSupported() ? \"Supported\" : \"Not supported\"}</div>\n          </div>\n          <div class=\"flex flex-row justify-between\">\n            <div class=\"font-bold\">Broadcast Channel</div>\n            <div>{broadcastChannelSupported() ? \"Supported\" : \"Not supported\"}</div>\n          </div>\n          <div class=\"flex flex-row justify-between\">\n            <div class=\"font-bold\">Shared Service</div>\n            <div>{sharedServiceWorking() ? \"Working\" : \"Not working\"}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n"],"names":["Debug","useSyncStore","isWebWorkerSupported","Worker","isOPFSSupported","navigator","storage","getDirectory","isWebRTCSupported","mediaDevices","getUserMedia","audio","isServiceWorkerSupported","serviceWorker","isServiceWorkerEnabled","fetch","then","res","ok","isLocksSupported","locks","isPersistentStorageSupported","persist","isPersistentStorageEnabled","persisted","enablePersistentStorage","granted","toast","success","setPersistentStorageEnabled","error","isMessageChannelSupported","MessageChannel","isBroadcastChannelSupported","BroadcastChannel","isCreateSyncAccessHandleEnabled","workerScript","worker","URL","createObjectURL","Blob","Promise","resolve","onmessage","e","data","postMessage","isSharedServiceWorking","sharedService","SharedService","createSharedServicePort","read","console","log","reject","messageHandler","event","removeEventListener","errorHandler","ErrorEvent","onerror","activate","proxy","opfsSupported","setOPFSSupported","createSignal","webRTCSupported","setWebRTCSupported","serviceWorkerEnabled","setServiceWorkerEnabled","persistentStorageEnabled","webWorkerSupported","setWebWorkerSupported","locksSupported","setLocksSupported","persistentStorageSupported","setPersistentStorageSupported","serviceWorkerSupported","setServiceWorkerSupported","createSyncAccessHandleEnabled","setCreateSyncAccessHandleEnabled","messageChannelSupported","setMessageChannelSupported","broadcastChannelSupported","setBroadcastChannelSupported","sharedServiceWorking","setSharedServiceWorking","createEffect","_el$","_$getNextElement","_tmpl$","_el$2","firstChild","_el$3","nextSibling","_el$4","_el$5","_el$6","_el$7","_el$8","_el$9","_el$10","_el$11","_el$12","_el$13","_el$14","_el$15","_el$16","_el$17","_el$18","_el$19","_el$20","_el$21","_el$22","_el$23","_el$24","_el$25","_el$26","_el$27","_el$28","_el$29","_el$30","_el$31","_el$32","_el$33","_el$34","_el$35","_el$36","_el$37","_el$38","_el$39","_el$40","_el$41","_$insert","$$click","_$runHydrationEvents","_$delegateEvents"],"mappings":"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"}