{"version":3,"file":"vidstack-audio-C9hhqeWo.js","sources":["../../../../../node_modules/.pnpm/vidstack@1.11.13/node_modules/vidstack/prod/providers/vidstack-audio.js"],"sourcesContent":["import { e as scoped } from '../chunks/vidstack-CSyVEdLV.js';\nimport { HTMLMediaProvider } from './vidstack-html.js';\nimport { H as HTMLAirPlayAdapter } from '../chunks/vidstack-BJhWhebu.js';\nimport '../chunks/vidstack-BupzoABp.js';\nimport '../chunks/vidstack-CpkvFYuN.js';\nimport '../chunks/vidstack-ksPACRiU.js';\nimport '../chunks/vidstack-CerDQCFL.js';\n\nclass AudioProvider extends HTMLMediaProvider {\n  constructor(audio, ctx) {\n    super(audio, ctx);\n    this.$$PROVIDER_TYPE = \"AUDIO\";\n    scoped(() => {\n      this.airPlay = new HTMLAirPlayAdapter(this.media, ctx);\n    }, this.scope);\n  }\n  get type() {\n    return \"audio\";\n  }\n  setup() {\n    super.setup();\n    if (this.type === \"audio\")\n      this.b.delegate.c(\"provider-setup\", this);\n  }\n  /**\n   * The native HTML `<audio>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement}\n   */\n  get audio() {\n    return this.a;\n  }\n}\n\nexport { AudioProvider };\n"],"names":["AudioProvider","HTMLMediaProvider","constructor","audio","ctx","$$PROVIDER_TYPE","scoped","airPlay","HTMLAirPlayAdapter","media","scope","type","setup","b","delegate","c","a"],"mappings":"8TAQA,MAAMA,UAAsBC,CAAkB,CAC5CC,YAAYC,EAAOC,EAAK,CACtB,MAAMD,EAAOC,CAAG,EAChB,KAAKC,gBAAkB,QACvBC,EAAO,IAAM,CACX,KAAKC,QAAU,IAAIC,EAAmB,KAAKC,MAAOL,CAAG,CACvD,EAAG,KAAKM,KAAK,CACf,CACA,IAAIC,MAAO,CACT,MAAO,OACT,CACAC,OAAQ,CACN,MAAMA,MAAK,EACP,KAAKD,OAAS,SAChB,KAAKE,EAAEC,SAASC,EAAE,iBAAkB,IAAI,CAC5C,CAMA,IAAIZ,OAAQ,CACV,OAAO,KAAKa,CACd,CACF","x_google_ignoreList":[0]}