{"version":3,"file":"vidstack-google-cast-BYvedlU3.js","sources":["../../../../../node_modules/.pnpm/vidstack@1.11.13/node_modules/vidstack/prod/providers/vidstack-google-cast.js"],"sourcesContent":["import { l as listenEvent, g as effect, T as untrack, r as createScope, U as keysOf, q as onDispose, D as DOMEvent, p as peek } from '../chunks/vidstack-CSyVEdLV.js';\nimport { T as TimeRange } from '../chunks/vidstack-DeDYMHjY.js';\nimport { R as RAFLoop } from '../chunks/vidstack-CpkvFYuN.js';\nimport { L as ListSymbol } from '../chunks/vidstack-CerDQCFL.js';\nimport { f as getCastSessionMedia, g as getCastContext, a as getCastSession, j as hasActiveCastSession, l as listenCastContextEvent, c as getCastErrorMessage } from '../chunks/vidstack-DjDpNi5w.js';\n\nclass GoogleCastMediaInfoBuilder {\n  constructor(src) {\n    this.Ul = new chrome.cast.media.MediaInfo(src.src, src.type);\n  }\n  build() {\n    return this.Ul;\n  }\n  Xl(streamType) {\n    if (streamType.includes(\"live\")) {\n      this.Ul.streamType = chrome.cast.media.StreamType.LIVE;\n    } else {\n      this.Ul.streamType = chrome.cast.media.StreamType.BUFFERED;\n    }\n    return this;\n  }\n  Yl(tracks) {\n    this.Ul.tracks = tracks.map(this.Il);\n    return this;\n  }\n  Zl(title, poster) {\n    this.Ul.metadata = new chrome.cast.media.GenericMediaMetadata();\n    this.Ul.metadata.title = title;\n    this.Ul.metadata.images = [{ url: poster }];\n    return this;\n  }\n  Il(track, trackId) {\n    const castTrack = new chrome.cast.media.Track(trackId, chrome.cast.media.TrackType.TEXT);\n    castTrack.name = track.label;\n    castTrack.trackContentId = track.src;\n    castTrack.trackContentType = \"text/vtt\";\n    castTrack.language = track.language;\n    castTrack.subtype = track.kind.toUpperCase();\n    return castTrack;\n  }\n}\n\nconst REMOTE_TRACK_TEXT_TYPE = chrome.cast.media.TrackType.TEXT, REMOTE_TRACK_AUDIO_TYPE = chrome.cast.media.TrackType.AUDIO;\nclass GoogleCastTracksManager {\n  constructor(_cast, _ctx, _onNewLocalTracks) {\n    this.xm = _cast;\n    this.b = _ctx;\n    this.zm = _onNewLocalTracks;\n  }\n  Hm() {\n    const syncRemoteActiveIds = this.Km.bind(this);\n    listenEvent(this.b.audioTracks, \"change\", syncRemoteActiveIds);\n    listenEvent(this.b.textTracks, \"mode-change\", syncRemoteActiveIds);\n    effect(this.Lm.bind(this));\n  }\n  wm() {\n    return this.b.$state.textTracks().filter((track) => track.src && track.type === \"vtt\");\n  }\n  Cm() {\n    return this.b.$state.audioTracks();\n  }\n  Wl(type) {\n    const tracks = this.xm.mediaInfo?.tracks ?? [];\n    return type ? tracks.filter((track) => track.type === type) : tracks;\n  }\n  Dm() {\n    const activeIds = [], activeLocalAudioTrack = this.Cm().find((track) => track.selected), activeLocalTextTracks = this.wm().filter(\n      (track) => track.mode === \"showing\"\n    );\n    if (activeLocalAudioTrack) {\n      const remoteAudioTracks = this.Wl(REMOTE_TRACK_AUDIO_TYPE), remoteAudioTrack = this.ym(remoteAudioTracks, activeLocalAudioTrack);\n      if (remoteAudioTrack)\n        activeIds.push(remoteAudioTrack.trackId);\n    }\n    if (activeLocalTextTracks?.length) {\n      const remoteTextTracks = this.Wl(REMOTE_TRACK_TEXT_TYPE);\n      if (remoteTextTracks.length) {\n        for (const localTrack of activeLocalTextTracks) {\n          const remoteTextTrack = this.ym(remoteTextTracks, localTrack);\n          if (remoteTextTrack)\n            activeIds.push(remoteTextTrack.trackId);\n        }\n      }\n    }\n    return activeIds;\n  }\n  Lm() {\n    const localTextTracks = this.wm();\n    if (!this.xm.isMediaLoaded)\n      return;\n    const remoteTextTracks = this.Wl(REMOTE_TRACK_TEXT_TYPE);\n    for (const localTrack of localTextTracks) {\n      const hasRemoteTrack = this.ym(remoteTextTracks, localTrack);\n      if (!hasRemoteTrack) {\n        untrack(() => this.zm?.());\n        break;\n      }\n    }\n  }\n  Mm(event) {\n    if (!this.xm.isMediaLoaded)\n      return;\n    const localAudioTracks = this.Cm(), localTextTracks = this.wm(), remoteAudioTracks = this.Wl(REMOTE_TRACK_AUDIO_TYPE), remoteTextTracks = this.Wl(REMOTE_TRACK_TEXT_TYPE);\n    for (const remoteAudioTrack of remoteAudioTracks) {\n      const hasLocalTrack = this.Em(localAudioTracks, remoteAudioTrack);\n      if (hasLocalTrack)\n        continue;\n      const localAudioTrack = {\n        id: remoteAudioTrack.trackId.toString(),\n        label: remoteAudioTrack.name,\n        language: remoteAudioTrack.language,\n        kind: remoteAudioTrack.subtype ?? \"main\",\n        selected: false\n      };\n      this.b.audioTracks[ListSymbol.oa](localAudioTrack, event);\n    }\n    for (const remoteTextTrack of remoteTextTracks) {\n      const hasLocalTrack = this.Em(localTextTracks, remoteTextTrack);\n      if (hasLocalTrack)\n        continue;\n      const localTextTrack = {\n        id: remoteTextTrack.trackId.toString(),\n        src: remoteTextTrack.trackContentId,\n        label: remoteTextTrack.name,\n        language: remoteTextTrack.language,\n        kind: remoteTextTrack.subtype.toLowerCase()\n      };\n      this.b.textTracks.add(localTextTrack, event);\n    }\n  }\n  Km(event) {\n    if (!this.xm.isMediaLoaded)\n      return;\n    const activeIds = this.Dm(), editRequest = new chrome.cast.media.EditTracksInfoRequest(activeIds);\n    this.Jm(editRequest).catch((error) => {\n    });\n  }\n  Jm(request) {\n    const media = getCastSessionMedia();\n    return new Promise((resolve, reject) => media?.editTracksInfo(request, resolve, reject));\n  }\n  Em(localTracks, remoteTrack) {\n    return localTracks.find((localTrack) => this.Fm(localTrack, remoteTrack));\n  }\n  ym(remoteTracks, localTrack) {\n    return remoteTracks.find((remoteTrack) => this.Fm(localTrack, remoteTrack));\n  }\n  // Note: we can't rely on id matching because they will differ between local/remote. A local\n  // track id might not even exist.\n  Fm(localTrack, remoteTrack) {\n    return remoteTrack.name === localTrack.label && remoteTrack.language === localTrack.language && remoteTrack.subtype.toLowerCase() === localTrack.kind.toLowerCase();\n  }\n}\n\nclass GoogleCastProvider {\n  constructor(_player, _ctx) {\n    this.aa = _player;\n    this.b = _ctx;\n    this.$$PROVIDER_TYPE = \"GOOGLE_CAST\";\n    this.scope = createScope();\n    this.V = null;\n    this.mc = \"disconnected\";\n    this.Va = 0;\n    this.Fa = 0;\n    this.Ga = new TimeRange(0, 0);\n    this.Hb = new TimeRange(0, 0);\n    this.Da = new RAFLoop(this.bd.bind(this));\n    this.vm = null;\n    this.Am = false;\n    this.yb = new GoogleCastTracksManager(\n      this.aa,\n      this.b,\n      this.zm.bind(this)\n    );\n  }\n  get c() {\n    return this.b.delegate.c;\n  }\n  get type() {\n    return \"google-cast\";\n  }\n  get currentSrc() {\n    return this.V;\n  }\n  /**\n   * The Google Cast remote player.\n   *\n   * @see {@link https://developers.google.com/cast/docs/reference/web_sender/cast.framework.RemotePlayer}\n   */\n  get player() {\n    return this.aa;\n  }\n  /**\n   * @see {@link https://developers.google.com/cast/docs/reference/web_sender/cast.framework.CastContext}\n   */\n  get cast() {\n    return getCastContext();\n  }\n  /**\n   * @see {@link https://developers.google.com/cast/docs/reference/web_sender/cast.framework.CastSession}\n   */\n  get session() {\n    return getCastSession();\n  }\n  /**\n   * @see {@link https://developers.google.com/cast/docs/reference/web_sender/chrome.cast.media.Media}\n   */\n  get media() {\n    return getCastSessionMedia();\n  }\n  /**\n   * Whether the current Google Cast session belongs to this provider.\n   */\n  get hasActiveSession() {\n    return hasActiveCastSession(this.V);\n  }\n  setup() {\n    this.sm();\n    this.tm();\n    this.yb.Hm();\n    this.c(\"provider-setup\", this);\n  }\n  sm() {\n    listenCastContextEvent(\n      cast.framework.CastContextEventType.CAST_STATE_CHANGED,\n      this.qm.bind(this)\n    );\n  }\n  tm() {\n    const Event2 = cast.framework.RemotePlayerEventType, handlers = {\n      [Event2.IS_CONNECTED_CHANGED]: this.qm,\n      [Event2.IS_MEDIA_LOADED_CHANGED]: this.Jl,\n      [Event2.CAN_CONTROL_VOLUME_CHANGED]: this.em,\n      [Event2.CAN_SEEK_CHANGED]: this.fm,\n      [Event2.DURATION_CHANGED]: this.wg,\n      [Event2.IS_MUTED_CHANGED]: this.ab,\n      [Event2.VOLUME_LEVEL_CHANGED]: this.ab,\n      [Event2.IS_PAUSED_CHANGED]: this.jm,\n      [Event2.LIVE_SEEKABLE_RANGE_CHANGED]: this.ic,\n      [Event2.PLAYER_STATE_CHANGED]: this.km\n    };\n    this.dm = handlers;\n    const handler = this.lm.bind(this);\n    for (const type of keysOf(handlers)) {\n      this.aa.controller.addEventListener(type, handler);\n    }\n    onDispose(() => {\n      for (const type of keysOf(handlers)) {\n        this.aa.controller.removeEventListener(type, handler);\n      }\n    });\n  }\n  async play() {\n    if (!this.aa.isPaused && !this.Am)\n      return;\n    if (this.Am) {\n      await this.Gm(false, 0);\n      return;\n    }\n    this.aa.controller?.playOrPause();\n  }\n  async pause() {\n    if (this.aa.isPaused)\n      return;\n    this.aa.controller?.playOrPause();\n  }\n  getMediaStatus(request) {\n    return new Promise((resolve, reject) => {\n      this.media?.getStatus(request, resolve, reject);\n    });\n  }\n  setMuted(muted) {\n    const hasChanged = muted && !this.aa.isMuted || !muted && this.aa.isMuted;\n    if (hasChanged)\n      this.aa.controller?.muteOrUnmute();\n  }\n  setCurrentTime(time) {\n    this.aa.currentTime = time;\n    this.c(\"seeking\", time);\n    this.aa.controller?.seek();\n  }\n  setVolume(volume) {\n    this.aa.volumeLevel = volume;\n    this.aa.controller?.setVolumeLevel();\n  }\n  async loadSource(src) {\n    if (this.vm?.src !== src)\n      this.vm = null;\n    if (hasActiveCastSession(src)) {\n      this.um();\n      this.V = src;\n      return;\n    }\n    this.c(\"load-start\");\n    const loadRequest = this.am(src), errorCode = await this.session.loadMedia(loadRequest);\n    if (errorCode) {\n      this.V = null;\n      this.c(\"error\", Error(getCastErrorMessage(errorCode)));\n      return;\n    }\n    this.V = src;\n  }\n  destroy() {\n    this.H();\n    this.rm();\n  }\n  H() {\n    if (!this.vm) {\n      this.Fa = 0;\n      this.Ga = new TimeRange(0, 0);\n      this.Hb = new TimeRange(0, 0);\n    }\n    this.Da.ra();\n    this.Va = 0;\n    this.vm = null;\n  }\n  um() {\n    const resumeSessionEvent = new DOMEvent(\"resume-session\", { detail: this.session });\n    this.Jl(resumeSessionEvent);\n    const { muted, volume, savedState } = this.b.$state, localState = savedState();\n    this.setCurrentTime(Math.max(this.aa.currentTime, localState?.currentTime ?? 0));\n    this.setMuted(muted());\n    this.setVolume(volume());\n    if (localState?.paused === false)\n      this.play();\n  }\n  rm() {\n    this.cast.endCurrentSession(true);\n    const { remotePlaybackLoader } = this.b.$state;\n    remotePlaybackLoader.set(null);\n  }\n  Ml() {\n    const { savedState } = this.b.$state;\n    savedState.set({\n      paused: this.aa.isPaused,\n      currentTime: this.aa.currentTime\n    });\n    this.rm();\n  }\n  bd() {\n    this.im();\n  }\n  lm(event) {\n    this.dm[event.type].call(this, event);\n  }\n  qm(data) {\n    const castState = this.cast.getCastState(), state = castState === cast.framework.CastState.CONNECTED ? \"connected\" : castState === cast.framework.CastState.CONNECTING ? \"connecting\" : \"disconnected\";\n    if (this.mc === state)\n      return;\n    const detail = { type: \"google-cast\", state }, trigger = this.Vl(data);\n    this.mc = state;\n    this.c(\"remote-playback-change\", detail, trigger);\n    if (state === \"disconnected\") {\n      this.Ml();\n    }\n  }\n  Jl(event) {\n    const hasLoaded = !!this.aa.isMediaLoaded;\n    if (!hasLoaded)\n      return;\n    const src = peek(this.b.$state.source);\n    Promise.resolve().then(() => {\n      if (src !== peek(this.b.$state.source) || !this.aa.isMediaLoaded)\n        return;\n      this.H();\n      const duration = this.aa.duration;\n      this.Hb = new TimeRange(0, duration);\n      const detail = {\n        provider: this,\n        duration,\n        buffered: this.Ga,\n        seekable: this.gm()\n      }, trigger = this.Vl(event);\n      this.c(\"loaded-metadata\", void 0, trigger);\n      this.c(\"loaded-data\", void 0, trigger);\n      this.c(\"can-play\", detail, trigger);\n      this.em();\n      this.fm(event);\n      const { volume, muted } = this.b.$state;\n      this.setVolume(volume());\n      this.setMuted(muted());\n      this.Da.Bb();\n      this.yb.Mm(trigger);\n      this.yb.Km(trigger);\n    });\n  }\n  em() {\n    this.b.$state.canSetVolume.set(this.aa.canControlVolume);\n  }\n  fm(event) {\n    const trigger = this.Vl(event);\n    this.c(\"stream-type-change\", this.mm(), trigger);\n  }\n  mm() {\n    const streamType = this.aa.mediaInfo?.streamType;\n    return streamType === chrome.cast.media.StreamType.LIVE ? this.aa.canSeek ? \"live:dvr\" : \"live\" : \"on-demand\";\n  }\n  im() {\n    if (this.vm)\n      return;\n    const currentTime = this.aa.currentTime;\n    if (currentTime === this.Va)\n      return;\n    const prevPlayed = this.Fa, played = this.cm(currentTime), detail = { currentTime, played };\n    this.c(\"time-update\", detail);\n    if (currentTime > prevPlayed)\n      this.ic();\n    if (this.b.$state.seeking()) {\n      this.c(\"seeked\", currentTime);\n    }\n    this.Va = currentTime;\n  }\n  cm(time) {\n    return this.Fa >= time ? this.Ga : this.Ga = new TimeRange(0, this.Fa = time);\n  }\n  wg(event) {\n    if (!this.aa.isMediaLoaded || this.vm)\n      return;\n    const duration = this.aa.duration, trigger = this.Vl(event);\n    this.Hb = new TimeRange(0, duration);\n    this.c(\"duration-change\", duration, trigger);\n  }\n  ab(event) {\n    if (!this.aa.isMediaLoaded)\n      return;\n    const detail = {\n      muted: this.aa.isMuted,\n      volume: this.aa.volumeLevel\n    }, trigger = this.Vl(event);\n    this.c(\"volume-change\", detail, trigger);\n  }\n  jm(event) {\n    const trigger = this.Vl(event);\n    if (this.aa.isPaused) {\n      this.c(\"pause\", void 0, trigger);\n    } else {\n      this.c(\"play\", void 0, trigger);\n    }\n  }\n  ic(event) {\n    const detail = {\n      seekable: this.gm(),\n      buffered: this.Ga\n    }, trigger = event ? this.Vl(event) : void 0;\n    this.c(\"progress\", detail, trigger);\n  }\n  km(event) {\n    const state = this.aa.playerState, PlayerState = chrome.cast.media.PlayerState;\n    this.Am = state === PlayerState.IDLE;\n    if (state === PlayerState.PAUSED)\n      return;\n    const trigger = this.Vl(event);\n    switch (state) {\n      case PlayerState.PLAYING:\n        this.c(\"playing\", void 0, trigger);\n        break;\n      case PlayerState.BUFFERING:\n        this.c(\"waiting\", void 0, trigger);\n        break;\n      case PlayerState.IDLE:\n        this.Da.ra();\n        this.c(\"pause\");\n        this.c(\"end\");\n        break;\n    }\n  }\n  gm() {\n    return this.aa.liveSeekableRange ? new TimeRange(this.aa.liveSeekableRange.start, this.aa.liveSeekableRange.end) : this.Hb;\n  }\n  Vl(detail) {\n    return detail instanceof Event ? detail : new DOMEvent(detail.type, { detail });\n  }\n  Dl(src) {\n    const { streamType, title, poster } = this.b.$state;\n    return new GoogleCastMediaInfoBuilder(src).Zl(title(), poster()).Xl(streamType()).Yl(this.yb.wm()).build();\n  }\n  am(src) {\n    const mediaInfo = this.Dl(src), request = new chrome.cast.media.LoadRequest(mediaInfo), savedState = this.b.$state.savedState();\n    request.autoplay = (this.vm?.paused ?? savedState?.paused) === false;\n    request.currentTime = this.vm?.time ?? savedState?.currentTime ?? 0;\n    return request;\n  }\n  async Gm(paused, time) {\n    const src = peek(this.b.$state.source);\n    this.vm = { src, paused, time };\n    await this.loadSource(src);\n  }\n  zm() {\n    this.Gm(this.aa.isPaused, this.aa.currentTime).catch((error) => {\n    });\n  }\n}\n\nexport { GoogleCastProvider };\n"],"names":["GoogleCastMediaInfoBuilder","constructor","src","Ul","chrome","cast","media","MediaInfo","type","build","Xl","streamType","includes","StreamType","LIVE","BUFFERED","Yl","tracks","map","Il","Zl","title","poster","metadata","GenericMediaMetadata","images","url","track","trackId","castTrack","Track","TrackType","TEXT","name","label","trackContentId","trackContentType","language","subtype","kind","toUpperCase","REMOTE_TRACK_TEXT_TYPE","REMOTE_TRACK_AUDIO_TYPE","AUDIO","GoogleCastTracksManager","_cast","_ctx","_onNewLocalTracks","xm","b","zm","Hm","syncRemoteActiveIds","Km","bind","listenEvent","audioTracks","textTracks","effect","Lm","wm","$state","filter","Cm","Wl","mediaInfo","Dm","activeIds","activeLocalAudioTrack","find","selected","activeLocalTextTracks","mode","remoteAudioTracks","remoteAudioTrack","ym","push","length","remoteTextTracks","localTrack","remoteTextTrack","localTextTracks","isMediaLoaded","untrack","Mm","event","localAudioTracks","Em","localAudioTrack","id","toString","ListSymbol","oa","localTextTrack","toLowerCase","add","editRequest","EditTracksInfoRequest","Jm","catch","error","request","getCastSessionMedia","Promise","resolve","reject","editTracksInfo","localTracks","remoteTrack","Fm","remoteTracks","GoogleCastProvider","_player","aa","$$PROVIDER_TYPE","scope","createScope","V","mc","Va","Fa","Ga","TimeRange","Hb","Da","RAFLoop","bd","vm","Am","yb","c","delegate","currentSrc","player","getCastContext","session","getCastSession","hasActiveSession","hasActiveCastSession","setup","sm","tm","listenCastContextEvent","framework","CastContextEventType","CAST_STATE_CHANGED","qm","Event2","RemotePlayerEventType","handlers","IS_CONNECTED_CHANGED","IS_MEDIA_LOADED_CHANGED","Jl","CAN_CONTROL_VOLUME_CHANGED","em","CAN_SEEK_CHANGED","fm","DURATION_CHANGED","wg","IS_MUTED_CHANGED","ab","VOLUME_LEVEL_CHANGED","IS_PAUSED_CHANGED","jm","LIVE_SEEKABLE_RANGE_CHANGED","ic","PLAYER_STATE_CHANGED","km","dm","handler","lm","keysOf","controller","addEventListener","onDispose","removeEventListener","play","isPaused","Gm","playOrPause","pause","getMediaStatus","getStatus","setMuted","muted","isMuted","muteOrUnmute","setCurrentTime","time","currentTime","seek","setVolume","volume","volumeLevel","setVolumeLevel","loadSource","um","loadRequest","am","errorCode","loadMedia","Error","getCastErrorMessage","destroy","H","rm","ra","resumeSessionEvent","DOMEvent","detail","savedState","localState","Math","max","paused","endCurrentSession","remotePlaybackLoader","set","Ml","im","call","data","castState","getCastState","state","CastState","CONNECTED","CONNECTING","trigger","Vl","peek","source","then","duration","provider","buffered","seekable","gm","Bb","canSetVolume","canControlVolume","mm","canSeek","prevPlayed","played","cm","seeking","playerState","PlayerState","IDLE","PAUSED","PLAYING","BUFFERING","liveSeekableRange","start","end","Event","Dl","LoadRequest","autoplay"],"mappings":"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","x_google_ignoreList":[0]}