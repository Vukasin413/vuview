import{j as t,A as Ee,r as We,w as s,x as Pe,l as je,y as He}from"./routing-BmD2xUmi.js";import{L as Ne,R as h,Y as Le,Z as Me}from"./syncStore-BssUQgBy.js";import"./Link-Dg-h0Eyu.js";import"./components-BMGKah2q.js";import"./index-BnPmuIsI.js";import"./index-DPECAXpK.js";import"./index-Cb4tY8hP.js";var Re=He('<div class=p-4><h1 class="text-2xl font-bold">Debug</h1><div class="flex flex-col space-y-2"><div class="flex flex-col space-y-1"><div class="flex flex-row justify-between"><div class=font-bold>Web Worker</div><div></div></div><div class="flex flex-row justify-between"><div class=font-bold>OPFS</div><div></div></div><div class="flex flex-row justify-between"><div class=font-bold>WebRTC</div><div></div></div><div class="flex flex-row justify-between"><div class=font-bold>Service Worker</div><div></div></div><div class="flex flex-row justify-between"><div class=font-bold>Service Worker Enabled</div><div></div></div><div class="flex flex-row justify-between"><div class=font-bold>Locks</div><div></div></div><div class="flex flex-row justify-between"><div class=font-bold>Persistent Storage</div><div></div></div><div class="flex flex-row justify-between"><div class=font-bold>Persistent Storage Enabled</div><div></div><span class="cursor-pointer underline text-primary">Enable</span></div><div class="flex flex-row justify-between"><div class=font-bold>Create Sync Access Handle</div><div></div></div><div class="flex flex-row justify-between"><div class=font-bold>Message Channel</div><div></div></div><div class="flex flex-row justify-between"><div class=font-bold>Broadcast Channel</div><div></div></div><div class="flex flex-row justify-between"><div class=font-bold>Shared Service</div><div>');function Ie(){Ne();const $=()=>typeof Worker<"u",_=async()=>{try{return await navigator.storage.getDirectory(),!0}catch{return!1}},k=async()=>{try{return await navigator.mediaDevices.getUserMedia({audio:!0}),!0}catch{return!1}},C=()=>typeof navigator.serviceWorker<"u",m=async()=>await fetch("/clientId").then(e=>e.ok),E=()=>typeof navigator.locks<"u",W=()=>typeof navigator.storage.persist<"u",P=async()=>await navigator.storage.persisted(),j=async()=>{await navigator.storage.persist().then(e=>{e?(h.success("Persistent storage enabled"),c(!0)):h.error("Persistent storage not enabled")})},H=()=>typeof MessageChannel<"u",N=()=>typeof BroadcastChannel<"u",L=async()=>{const e=`
    self.onmessage = async () => {
    console.log("worker");
    try {
    console.log("trying to get directory");
    const handle = await navigator.storage.getDirectory();
    const file = await handle.getFileHandle("test.txt", { create: true });
    console.log("got file");
    const accessHandle = await file.createSyncAccessHandle();
    console.log("got access handle");
    accessHandle.write(new TextEncoder().encode("test"));
    accessHandle.flush();
    accessHandle.close();
    console.log("wrote to file");
    self.postMessage(true);
    } catch (e) {
      console.error("Error while creating sync access handle", e);
      self.postMessage(false);
    }
    }
    `,r=new Worker(URL.createObjectURL(new Blob([e])));return new Promise(a=>{r.onmessage=i=>{a(i.data)},r.postMessage("")})},M=async()=>{const e=`
    self.onmessage = async () => {
        self.postMessage(true);
    }
    `,r=new Worker(URL.createObjectURL(new Blob([e]))),a=new Le("test",()=>Me({read:async()=>(console.log("Calling read"),new Promise((i,n)=>{const l=o=>{i(o.data),r?.removeEventListener("message",l)},d=o=>{o instanceof ErrorEvent&&n(o),r?.removeEventListener("error",d)};r.onerror=d,r.onmessage=l,r.postMessage("")}))}));return new Promise(async i=>{try{await a.activate(async()=>{const n=await a?.proxy.read();console.log("res",n),i(n===!0)})}catch(n){console.error("Error connecting to shared service",n),i(!1)}})},[R,A]=t(!1),[B,D]=t(!1),[O,T]=t(!1),[U,c]=t(!1),[F,I]=t(!1),[Y,Z]=t(!1),[q,z]=t(!1),[G,J]=t(!1),[K,Q]=t(!1),[V,X]=t(!1),[ee,te]=t(!1),[se,re]=t(!1);return Ee(async()=>{A(await _()),D(await k()),T(await m()),c(await P()),I($()),Z(E()),z(W()),J(C()),Q(await L()),X(H()),te(N()),re(await M())}),(()=>{var e=We(Re),r=e.firstChild,a=r.nextSibling,i=a.firstChild,n=i.firstChild,l=n.firstChild,d=l.nextSibling,o=n.nextSibling,ne=o.firstChild,ie=ne.nextSibling,f=o.nextSibling,oe=f.firstChild,ae=oe.nextSibling,p=f.nextSibling,le=p.firstChild,de=le.nextSibling,v=p.nextSibling,ce=v.firstChild,fe=ce.nextSibling,S=v.nextSibling,pe=S.firstChild,ve=pe.nextSibling,u=S.nextSibling,Se=u.firstChild,ue=Se.nextSibling,g=u.nextSibling,ge=g.firstChild,b=ge.nextSibling,be=b.nextSibling,x=g.nextSibling,xe=x.firstChild,we=xe.nextSibling,w=x.nextSibling,ye=w.firstChild,he=ye.nextSibling,y=w.nextSibling,$e=y.firstChild,_e=$e.nextSibling,ke=y.nextSibling,Ce=ke.firstChild,me=Ce.nextSibling;return s(d,()=>F()?"Supported":"Not supported"),s(ie,()=>R()?"Supported":"Not supported"),s(ae,()=>B()?"Supported":"Not supported"),s(de,()=>G()?"Supported":"Not supported"),s(fe,()=>O()?"Enabled":"Not enabled"),s(ve,()=>Y()?"Supported":"Not supported"),s(ue,()=>q()?"Supported":"Not supported"),s(b,()=>U()?"Enabled":"Not enabled"),be.$$click=j,s(we,()=>K()?"Enabled":"Not enabled"),s(he,()=>V()?"Supported":"Not supported"),s(_e,()=>ee()?"Supported":"Not supported"),s(me,()=>se()?"Working":"Not working"),Pe(),e})()}je(["click"]);export{Ie as default};
//# sourceMappingURL=debug-0BYsCdN7.js.map
