{"version":3,"file":"useIntersectionObserver-DOCe7fLW.js","sources":["../../../../../src/hooks/useIntersectionObserver.ts"],"sourcesContent":["import { createEffect, createSignal, onCleanup } from \"solid-js\";\n\ntype IntersectionOptions = IntersectionObserverInit & {\n  setTarget: () => HTMLElement | undefined;\n};\n\nexport default function useIntersectionObserver({\n  setTarget,\n  root = null,\n  rootMargin = \"0px\",\n  threshold = 0,\n}: IntersectionOptions) {\n  const [isIntersecting, setIntersecting] = createSignal(false);\n\n  let observer: IntersectionObserver;\n\n  createEffect(() => {\n    observer = new IntersectionObserver(\n      ([entry]) => {\n        setIntersecting(entry.isIntersecting);\n      },\n      {\n        root,\n        rootMargin,\n        threshold,\n      }\n    );\n\n    onCleanup(() => {\n      if (observer) observer.disconnect();\n    });\n  });\n\n  createEffect(() => {\n    const currentTarget = setTarget();\n    if (currentTarget && observer) {\n      observer.observe(currentTarget);\n    }\n  });\n\n  return isIntersecting;\n}\n"],"names":["useIntersectionObserver","setTarget","root","rootMargin","threshold","isIntersecting","setIntersecting","createSignal","observer","createEffect","IntersectionObserver","entry","onCleanup","disconnect","currentTarget","observe"],"mappings":"wDAMA,SAAwBA,EAAwB,CAC9CC,UAAAA,EACAC,KAAAA,EAAO,KACPC,WAAAA,EAAa,MACbC,UAAAA,EAAY,CACO,EAAG,CACtB,KAAM,CAACC,EAAgBC,CAAe,EAAIC,EAAa,EAAK,EAExDC,IAAAA,EAEJC,OAAAA,EAAa,IAAM,CACjBD,EAAW,IAAIE,qBACb,CAAC,CAACC,CAAK,IAAM,CACXL,EAAgBK,EAAMN,cAAc,CAAA,EAEtC,CACEH,KAAAA,EACAC,WAAAA,EACAC,UAAAA,CAAAA,CAEJ,EAEAQ,EAAU,IAAM,CACVJ,GAAUA,EAASK,WAAW,CAAA,CACnC,CAAA,CACF,EAEDJ,EAAa,IAAM,CACjB,MAAMK,EAAgBb,IAClBa,GAAiBN,GACnBA,EAASO,QAAQD,CAAa,CAChC,CACD,EAEMT,CACT"}