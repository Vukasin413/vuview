{"version":3,"file":"history-1CpmRNxz.js","sources":["../../../../../src/components/ImportHistoryModal.tsx","../../../../../node_modules/.pnpm/@leeoniya+ufuzzy@1.0.10/node_modules/@leeoniya/ufuzzy/dist/uFuzzy.esm.js","../../../../../src/routes/library/history.tsx?pick=default&pick=$css"],"sourcesContent":["import { toaster } from \"@kobalte/core\";\nimport { batch, createEffect, createSignal, Show } from \"solid-js\";\nimport { HistoryItem, useSyncStore } from \"~/stores/syncStore\";\nimport Button from \"./Button\";\nimport Modal from \"./Modal\";\nimport { toast } from \"./Toast\";\nimport { getVideoId } from \"~/utils/helpers\";\n\nexport default function ImportHistoryModal(props: {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n}) {\n  const [items, setItems] = createSignal([]);\n  const [index, setIndex] = createSignal(0);\n  const [success, setSuccess] = createSignal(0);\n  const [error, setError] = createSignal(0);\n  const [skipped, setSkipped] = createSignal(0);\n  let fileSelector: HTMLInputElement | undefined = undefined;\n  const itemsLength = () => items()?.length || 0;\n\n  function fileChange() {\n    if (!fileSelector?.files?.[0]) return;\n    const file = fileSelector.files[0];\n    file.text().then((text) => {\n      console.log(text);\n      setItems([]);\n      // Conduit\n      if (text.includes(\"conduit\")) {\n        const json = JSON.parse(text);\n        console.log(json);\n        const history = json.history;\n        console.log(history);\n        setItems(history);\n      }\n      // YouTube\n      else if (text.includes(\"products\") && text.includes(\"YouTube\")) {\n        const json = JSON.parse(text);\n        console.log(json);\n        const items = json.map((video: any) => {\n          const item = {\n            url: video.titleUrl.split(\"https://www.youtube.com\")[1],\n            title: video.title,\n            uploaderName: video.subtitles[0].name,\n            uploaderUrl: video.subtitles[0].url.split(\n              \"https://www.youtube.com\"\n            )[1],\n            watchedAt: new Date(video.time).getTime(),\n          };\n          console.log(item);\n          return item;\n        });\n        console.log(items);\n        setItems(\n          items.sort((a: any, b: any) => {\n            return b.watchedAt - a.watchedAt;\n          })\n        );\n      }\n      // LibreTube\n      else if (text.includes(\"watchPositions\")) {\n        console.log(\"LibreTube\");\n        const json = JSON.parse(text);\n        const lt = json.watchHistory.map((video: any) => {\n          return {\n            url: `/watch?v=${video.videoId}`,\n            duration: video.duration,\n            thumbnail: video.thumbnailUrl,\n            title: video.title,\n            uploaderName: video.uploader,\n            uploaderUrl: video.uploaderUrl,\n            uploaded: new Date(video.uploadDate).getTime(),\n            currentTime:\n              json.watchPositions.find((i: any) => i.videoId === video.videoId)\n                ?.position / 1000 ?? 0,\n          };\n        });\n        setItems(lt.sort((a: any, b: any) => b.watchedAt - a.watchedAt));\n      }\n\n      // Piped\n      else if (text.includes(\"watchHistory\")) {\n        const json = JSON.parse(text);\n        console.log(json);\n        const items = json.watchHistory.map((video: any) => {\n          const item = {\n            duration: video.duration,\n            url: video.url,\n            title: video.title,\n            uploaderName: video.uploaderName,\n            uploaderUrl: video.uploaderUrl,\n            watchedAt: video.watchedAt ?? 0,\n            currentTime: video.currentTime ?? 0,\n          };\n          return item;\n        });\n        setItems(items.sort((a: any, b: any) => b.watchedAt - a.watchedAt));\n      }\n\n      // FreeTube\n      else if (text.startsWith(`{\"videoId:`)) {\n        text = `[${text.replace(/\\n/g, \", \").slice(0, -2)}]`;\n        let json = JSON.parse(text);\n        console.log(json);\n        const ft = json\n          .map((video: any) => {\n            return {\n              duration: video.duration,\n              thumbnail: video.thumbnail,\n              title: video.title,\n              uploaderName: video.author,\n              uploaderUrl: video.authorUrl,\n              videoId: video.videoId,\n              watchedAt: video.watchedDate,\n              currentTime: video.currentTime,\n            };\n          })\n          .sort((a: any, b: any) => b.watchedAt - a.watchedAt);\n        setItems(ft);\n      }\n      // Invidious\n      else if (text.startsWith(`{\"subscriptions\":`)) {\n        const json = JSON.parse(text);\n        console.log(json);\n        const iv = json.watch_history.map((video: any) => {\n          return {\n            videoId: video,\n            watchedAt: 0,\n            currentTime: 0,\n          };\n        });\n        setItems(iv);\n      } else {\n        alert(\"Unsupported file\");\n      }\n      console.log(items());\n    });\n  }\n  const sync = useSyncStore();\n  async function handleImport(e: any) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const newItems: Record<string, HistoryItem>[] = [];\n    if (!sync.store) return;\n    for (const item of items() as HistoryItem[]) {\n      const id = getVideoId(item);\n      if (!id) {\n        setError(error() + 1);\n        setIndex(index() + 1);\n        continue;\n      }\n      const existing = sync.store.history[id];\n      if (existing) {\n        setIndex(index() + 1);\n        setSkipped(skipped() + 1);\n        continue;\n      }\n      newItems.push({ [id]: item });\n      setIndex(index() + 1);\n      setSuccess(success() + 1);\n    }\n    newItems.sort((a, b) => {\n      if (!a[Object.keys(a)[0]].watchedAt) return 1;\n      if (!b[Object.keys(b)[0]].watchedAt) return -1;\n      if (a[Object.keys(a)[0]].watchedAt > b[Object.keys(b)[0]].watchedAt)\n        return -1;\n      if (a[Object.keys(a)[0]].watchedAt < b[Object.keys(b)[0]].watchedAt)\n        return 1;\n      return 0;\n    });\n\n    const importHistory =async()=> new Promise<string>( (resolve) => {\n      batch(() => {\n        newItems.forEach((item) => {\n          sync.setStore(\"history\", item);\n        });\n      });\n      resolve(\"done\");\n    });\n    toast.promise(importHistory, {\n      loading: \"Importing history\",\n      success: (data) => {\n        return data;\n      },\n      error: () => {\n        return \"Error importing history\";\n      }\n    });\n    await importHistory()\n  }\n\n\n\n  return (\n    <Modal\n      title=\"Import History\"\n      isOpen={props.isOpen}\n      setIsOpen={props.setIsOpen}\n    >\n      <form>\n        <br />\n        <div>\n          <input ref={fileSelector} type=\"file\" onInput={fileChange} />\n        </div>\n        <textarea\n          class=\"text-black\"\n          onInput={(e) => {\n            // setV(e.currentTarget.value)\n            console.log(e.currentTarget.value);\n            setItems(JSON.parse(e.currentTarget.value).history);\n            console.log(items());\n          }}\n        />\n        <br />\n        <div>\n          <Show when={itemsLength() > 0}>\n            <strong>{`Found ${itemsLength()} items`}</strong>\n          </Show>\n        </div>{\" \"}\n        <div>\n          <progress value={index()} max={itemsLength()} />\n          <div>{`Success: ${success()} Error: ${error()} Skipped: ${skipped()}`}</div>\n        </div>\n        <div>\n          <button class=\"btn w-auto\" onClick={handleImport}>\n            Import\n          </button>\n          {/* <button class=\"btn w-auto\" onClick={deleteHistory}> */}\n          {/*   Delete */}\n          {/* </button> */}\n        </div>\n      </form>\n    </Modal>\n  );\n}\n","/**\n* Copyright (c) 2023, Leon Sorokin\n* All rights reserved. (MIT Licensed)\n*\n* uFuzzy.js (Î¼Fuzzy)\n* A tiny, efficient fuzzy matcher that doesn't suck\n* https://github.com/leeoniya/uFuzzy (v1.0.10)\n*/\n\nconst cmp = new Intl.Collator('en').compare;\n\nconst inf = Infinity;\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions#escaping\nconst escapeRegExp = str => str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n\n// meh, magic tmp placeholder, must be tolerant to toLocaleLowerCase(), interSplit, and intraSplit\nconst EXACT_HERE = 'eexxaacctt';\n\nconst LATIN_UPPER = 'A-Z';\nconst LATIN_LOWER = 'a-z';\n\nconst swapAlpha = (str, upper, lower) => str.replace(LATIN_UPPER, upper).replace(LATIN_LOWER, lower);\n\nconst OPTS = {\n\t// whether regexps use a /u unicode flag\n\tunicode: false,\n\n\talpha: null,\n\n\t// term segmentation & punct/whitespace merging\n\tinterSplit: \"[^A-Za-z\\\\d']+\",\n\tintraSplit: \"[a-z][A-Z]\",\n\n\t// intra bounds that will be used to increase lft1/rgt1 info counters\n\tintraBound: \"[A-Za-z]\\\\d|\\\\d[A-Za-z]|[a-z][A-Z]\",\n\n\t// inter-bounds mode\n\t// 2 = strict (will only match 'man' on whitepace and punct boundaries: Mega Man, Mega_Man, mega.man)\n\t// 1 = loose  (plus allowance for alpha-num and case-change boundaries: MegaMan, 0007man)\n\t// 0 = any    (will match 'man' as any substring: megamaniac)\n\tinterLft: 0,\n\tinterRgt: 0,\n\n\t// allowance between terms\n\tinterChars: '.',\n\tinterIns: inf,\n\n\t// allowance between chars in terms\n\tintraChars: \"[a-z\\\\d']\", // internally case-insensitive\n\tintraIns: 0,\n\n\tintraContr: \"'[a-z]{1,2}\\\\b\",\n\n\t// multi-insert or single-error mode\n\tintraMode: 0,\n\n\t// single-error bounds for errors within terms, default requires exact first char\n\tintraSlice: [1, inf],\n\n\t// single-error tolerance toggles\n\tintraSub: 0,\n\tintraTrn: 0,\n\tintraDel: 0,\n\n\t// can post-filter matches that are too far apart in distance or length\n\t// (since intraIns is between each char, it can accum to nonsense matches)\n\tintraFilt: (term, match, index) => true, // should this also accept WIP info?\n\n\t// final sorting fn\n\tsort: (info, haystack, needle) => {\n\t\tlet {\n\t\t\tidx,\n\t\t\tchars,\n\t\t\tterms,\n\t\t\tinterLft2,\n\t\t\tinterLft1,\n\t\t//\tinterRgt2,\n\t\t//\tinterRgt1,\n\t\t\tstart,\n\t\t\tintraIns,\n\t\t\tinterIns,\n\t\t} = info;\n\n\t\treturn idx.map((v, i) => i).sort((ia, ib) => (\n\t\t\t// most contig chars matched\n\t\t\tchars[ib] - chars[ia] ||\n\t\t\t// least char intra-fuzz (most contiguous)\n\t\t\tintraIns[ia] - intraIns[ib] ||\n\t\t\t// most prefix bounds, boosted by full term matches\n\t\t\t(\n\t\t\t\t(terms[ib] + interLft2[ib] + 0.5 * interLft1[ib]) -\n\t\t\t\t(terms[ia] + interLft2[ia] + 0.5 * interLft1[ia])\n\t\t\t) ||\n\t\t\t// highest density of match (least span)\n\t\t//\tspan[ia] - span[ib] ||\n\t\t\t// highest density of match (least term inter-fuzz)\n\t\t\tinterIns[ia] - interIns[ib] ||\n\t\t\t// earliest start of match\n\t\t\tstart[ia] - start[ib] ||\n\t\t\t// alphabetic\n\t\t\tcmp(haystack[idx[ia]], haystack[idx[ib]])\n\t\t));\n\t},\n};\n\nconst lazyRepeat = (chars, limit) => (\n\tlimit == 0   ? ''           :\n\tlimit == 1   ? chars + '??' :\n\tlimit == inf ? chars + '*?' :\n\t               chars + `{0,${limit}}?`\n);\n\nconst mode2Tpl = '(?:\\\\b|_)';\n\nfunction uFuzzy(opts) {\n\topts = Object.assign({}, OPTS, opts);\n\n\tlet {\n\t\tunicode,\n\t\tinterLft,\n\t\tinterRgt,\n\t\tintraMode,\n\t\tintraSlice,\n\t\tintraIns,\n\t\tintraSub,\n\t\tintraTrn,\n\t\tintraDel,\n\t\tintraContr,\n\t\tintraSplit: _intraSplit,\n\t\tinterSplit: _interSplit,\n\t\tintraBound: _intraBound,\n\t\tintraChars,\n\t} = opts;\n\n\tlet alpha = opts.letters ?? opts.alpha;\n\n\tif (alpha != null) {\n\t\tlet upper = alpha.toLocaleUpperCase();\n\t\tlet lower = alpha.toLocaleLowerCase();\n\n\t\t_interSplit = swapAlpha(_interSplit, upper, lower);\n\t\t_intraSplit = swapAlpha(_intraSplit, upper, lower);\n\t\t_intraBound = swapAlpha(_intraBound, upper, lower);\n\t\tintraChars = swapAlpha(intraChars, upper, lower);\n\t\tintraContr = swapAlpha(intraContr, upper, lower);\n\t}\n\n\tlet uFlag = unicode ? 'u' : '';\n\n\tconst EXACTS_RE = new RegExp('\".+?\"', 'gi' + uFlag);\n\tconst NEGS_RE = new RegExp(`(?:\\\\s+|^)-${intraChars}+`, 'gi' + uFlag);\n\n\tlet { intraRules } = opts;\n\n\tif (intraRules == null) {\n\t\tintraRules = p => {\n\t\t\t// default is exact term matches only\n\t\t\tlet _intraSlice = OPTS.intraSlice, // requires first char\n\t\t\t\t_intraIns = 0,\n\t\t\t\t_intraSub = 0,\n\t\t\t\t_intraTrn = 0,\n\t\t\t\t_intraDel = 0;\n\n\t\t\tlet plen = p.length;\n\n\t\t\t// prevent junk matches by requiring stricter rules for short terms\n\t\t\tif (plen <= 4) {\n\t\t\t\tif (plen >= 3) {\n\t\t\t\t\t// one swap in non-first char when 3-4 chars\n\t\t\t\t\t_intraTrn = Math.min(intraTrn, 1);\n\n\t\t\t\t\t// or one insertion when 4 chars\n\t\t\t\t\tif (plen == 4)\n\t\t\t\t\t\t_intraIns = Math.min(intraIns, 1);\n\t\t\t\t}\n\t\t\t\t// else exact match when 1-2 chars\n\t\t\t}\n\t\t\t// use supplied opts\n\t\t\telse {\n\t\t\t\t_intraSlice = intraSlice;\n\t\t\t\t_intraIns = intraIns,\n\t\t\t\t_intraSub = intraSub,\n\t\t\t\t_intraTrn = intraTrn,\n\t\t\t\t_intraDel = intraDel;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tintraSlice: _intraSlice,\n\t\t\t\tintraIns: _intraIns,\n\t\t\t\tintraSub: _intraSub,\n\t\t\t\tintraTrn: _intraTrn,\n\t\t\t\tintraDel: _intraDel,\n\t\t\t};\n\t\t};\n\t}\n\n\tlet withIntraSplit = !!_intraSplit;\n\n\tlet intraSplit = new RegExp(_intraSplit, 'g' + uFlag);\n\tlet interSplit = new RegExp(_interSplit, 'g' + uFlag);\n\n\tlet trimRe = new RegExp('^' + _interSplit + '|' + _interSplit + '$', 'g' + uFlag);\n\tlet contrsRe = new RegExp(intraContr, 'gi' + uFlag);\n\n\tconst split = needle => {\n\t\tlet exacts = [];\n\n\t\tneedle = needle.replace(EXACTS_RE, m => {\n\t\t\texacts.push(m);\n\t\t\treturn EXACT_HERE;\n\t\t});\n\n\t\tneedle = needle.replace(trimRe, '').toLocaleLowerCase();\n\n\t\tif (withIntraSplit)\n\t\t\tneedle = needle.replace(intraSplit, m => m[0] + ' ' + m[1]);\n\n\t\tlet j = 0;\n\t\treturn needle.split(interSplit).filter(t => t != '').map(v => v === EXACT_HERE ? exacts[j++] : v);\n\t};\n\n\tconst prepQuery = (needle, capt = 0, interOR = false) => {\n\t\t// split on punct, whitespace, num-alpha, and upper-lower boundaries\n\t\tlet parts = split(needle);\n\n\t\tif (parts.length == 0)\n\t\t\treturn [];\n\n\t\t// split out any detected contractions for each term that become required suffixes\n\t\tlet contrs = Array(parts.length).fill('');\n\t\tparts = parts.map((p, pi) => p.replace(contrsRe, m => {\n\t\t\tcontrs[pi] = m;\n\t\t\treturn '';\n\t\t}));\n\n\t\t// array of regexp tpls for each term\n\t\tlet reTpl;\n\n\t\t// allows single mutations within each term\n\t\tif (intraMode == 1) {\n\t\t\treTpl = parts.map((p, pi) => {\n\t\t\t\tlet {\n\t\t\t\t\tintraSlice,\n\t\t\t\t\tintraIns,\n\t\t\t\t\tintraSub,\n\t\t\t\t\tintraTrn,\n\t\t\t\t\tintraDel,\n\t\t\t\t} = intraRules(p);\n\n\t\t\t\tif (intraIns + intraSub + intraTrn + intraDel == 0)\n\t\t\t\t\treturn p + contrs[pi];\n\n\t\t\t\tif (p[0] === '\"')\n\t\t\t\t\treturn escapeRegExp(p.slice(1, -1));\n\n\t\t\t\tlet [lftIdx, rgtIdx] = intraSlice;\n\t\t\t\tlet lftChar = p.slice(0, lftIdx); // prefix\n\t\t\t\tlet rgtChar = p.slice(rgtIdx);    // suffix\n\n\t\t\t\tlet chars = p.slice(lftIdx, rgtIdx);\n\n\t\t\t\t// neg lookahead to prefer matching 'Test' instead of 'tTest' in ManifestTest or fittest\n\t\t\t\t// but skip when search term contains leading repetition (aardvark, aaa)\n\t\t\t\tif (intraIns == 1 && lftChar.length == 1 && lftChar != chars[0])\n\t\t\t\t\tlftChar += '(?!' + lftChar + ')';\n\n\t\t\t\tlet numChars = chars.length;\n\n\t\t\t\tlet variants = [p];\n\n\t\t\t\t// variants with single char substitutions\n\t\t\t\tif (intraSub) {\n\t\t\t\t\tfor (let i = 0; i < numChars; i++)\n\t\t\t\t\t\tvariants.push(lftChar + chars.slice(0, i) + intraChars + chars.slice(i + 1) + rgtChar);\n\t\t\t\t}\n\n\t\t\t\t// variants with single transpositions\n\t\t\t\tif (intraTrn) {\n\t\t\t\t\tfor (let i = 0; i < numChars - 1; i++) {\n\t\t\t\t\t\tif (chars[i] != chars[i+1])\n\t\t\t\t\t\t\tvariants.push(lftChar + chars.slice(0, i) + chars[i+1] + chars[i] + chars.slice(i + 2) + rgtChar);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// variants with single char omissions\n\t\t\t\tif (intraDel) {\n\t\t\t\t\tfor (let i = 0; i < numChars; i++)\n\t\t\t\t\t\tvariants.push(lftChar + chars.slice(0, i + 1) + '?' + chars.slice(i + 1) + rgtChar);\n\t\t\t\t}\n\n\t\t\t\t// variants with single char insertions\n\t\t\t\tif (intraIns) {\n\t\t\t\t\tlet intraInsTpl = lazyRepeat(intraChars, 1);\n\n\t\t\t\t\tfor (let i = 0; i < numChars; i++)\n\t\t\t\t\t\tvariants.push(lftChar + chars.slice(0, i) + intraInsTpl + chars.slice(i) + rgtChar);\n\t\t\t\t}\n\n\t\t\t\tlet reTpl = '(?:' + variants.join('|') + ')' + contrs[pi];\n\n\t\t\t//\tconsole.log(reTpl);\n\n\t\t\t\treturn reTpl;\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tlet intraInsTpl = lazyRepeat(intraChars, intraIns);\n\n\t\t\t// capture at char level\n\t\t\tif (capt == 2 && intraIns > 0) {\n\t\t\t\t// sadly, we also have to capture the inter-term junk via parenth-wrapping .*?\n\t\t\t\t// to accum other capture groups' indices for \\b boosting during scoring\n\t\t\t\tintraInsTpl = ')(' + intraInsTpl + ')(';\n\t\t\t}\n\n\t\t\treTpl = parts.map((p, pi) => p[0] === '\"' ? escapeRegExp(p.slice(1, -1)) :  p.split('').map((c, i, chars) => {\n\t\t\t\t// neg lookahead to prefer matching 'Test' instead of 'tTest' in ManifestTest or fittest\n\t\t\t\t// but skip when search term contains leading repetition (aardvark, aaa)\n\t\t\t\tif (intraIns == 1 && i == 0 && chars.length > 1 && c != chars[i+1])\n\t\t\t\t\tc += '(?!' + c + ')';\n\n\t\t\t\treturn c;\n\t\t\t}).join(intraInsTpl) + contrs[pi]);\n\t\t}\n\n\t//\tconsole.log(reTpl);\n\n\t\t// this only helps to reduce initial matches early when they can be detected\n\t\t// TODO: might want a mode 3 that excludes _\n\t\tlet preTpl = interLft == 2 ? mode2Tpl : '';\n\t\tlet sufTpl = interRgt == 2 ? mode2Tpl : '';\n\n\t\tlet interCharsTpl = sufTpl + lazyRepeat(opts.interChars, opts.interIns) + preTpl;\n\n\t\t// capture at word level\n\t\tif (capt > 0) {\n\t\t\tif (interOR) {\n\t\t\t\t// this is basically for doing .matchAll() occurence counting and highlighting without needing permuted ooo needles\n\t\t\t\treTpl = preTpl + '(' + reTpl.join(')' + sufTpl + '|' + preTpl + '(') + ')' + sufTpl;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// sadly, we also have to capture the inter-term junk via parenth-wrapping .*?\n\t\t\t\t// to accum other capture groups' indices for \\b boosting during scoring\n\t\t\t\treTpl = '(' + reTpl.join(')(' + interCharsTpl + ')(') + ')';\n\t\t\t\treTpl = '(.??' + preTpl + ')' + reTpl + '(' + sufTpl + '.*)'; // nit: trailing capture here assumes interIns = Inf\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treTpl = reTpl.join(interCharsTpl);\n\t\t\treTpl = preTpl + reTpl + sufTpl;\n\t\t}\n\n\t//\tconsole.log(reTpl);\n\n\t\treturn [new RegExp(reTpl, 'i' + uFlag), parts, contrs];\n\t};\n\n\tconst filter = (haystack, needle, idxs) => {\n\n\t\tlet [query] = prepQuery(needle);\n\n\t\tif (query == null)\n\t\t\treturn null;\n\n\t\tlet out = [];\n\n\t\tif (idxs != null) {\n\t\t\tfor (let i = 0; i < idxs.length; i++) {\n\t\t\t\tlet idx = idxs[i];\n\t\t\t\tquery.test(haystack[idx]) && out.push(idx);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (let i = 0; i < haystack.length; i++)\n\t\t\t\tquery.test(haystack[i]) && out.push(i);\n\t\t}\n\n\t\treturn out;\n\t};\n\n\tlet withIntraBound = !!_intraBound;\n\n\tlet interBound = new RegExp(_interSplit, uFlag);\n\tlet intraBound = new RegExp(_intraBound, uFlag);\n\n\tconst info = (idxs, haystack, needle) => {\n\n\t\tlet [query, parts, contrs] = prepQuery(needle, 1);\n\t\tlet [queryR] = prepQuery(needle, 2);\n\t\tlet partsLen = parts.length;\n\n\t\tlet len = idxs.length;\n\n\t\tlet field = Array(len).fill(0);\n\n\t\tlet info = {\n\t\t\t// idx in haystack\n\t\t\tidx: Array(len),\n\n\t\t\t// start of match\n\t\t\tstart: field.slice(),\n\t\t\t// length of match\n\t\t//\tspan: field.slice(),\n\n\t\t\t// contiguous chars matched\n\t\t\tchars: field.slice(),\n\n\t\t\t// contiguous (no fuzz) and bounded terms (intra=0, lft2/1, rgt2/1)\n\t\t\t// excludes terms that are contiguous but have < 2 bounds (substrings)\n\t\t\tterms: field.slice(),\n\n\t\t\t// cumulative length of unmatched chars (fuzz) within span\n\t\t\tinterIns: field.slice(), // between terms\n\t\t\tintraIns: field.slice(), // within terms\n\n\t\t\t// interLft/interRgt counters\n\t\t\tinterLft2: field.slice(),\n\t\t\tinterRgt2: field.slice(),\n\t\t\tinterLft1: field.slice(),\n\t\t\tinterRgt1: field.slice(),\n\n\t\t\tranges: Array(len),\n\t\t};\n\n\t\t// might discard idxs based on bounds checks\n\t\tlet mayDiscard = interLft == 1 || interRgt == 1;\n\n\t\tlet ii = 0;\n\n\t\tfor (let i = 0; i < idxs.length; i++) {\n\t\t\tlet mhstr = haystack[idxs[i]];\n\n\t\t\t// the matched parts are [full, junk, term, junk, term, junk]\n\t\t\tlet m = mhstr.match(query);\n\n\t\t\t// leading junk\n\t\t\tlet start = m.index + m[1].length;\n\n\t\t\tlet idxAcc = start;\n\t\t//\tlet span = m[0].length;\n\n\t\t\tlet disc = false;\n\t\t\tlet lft2 = 0;\n\t\t\tlet lft1 = 0;\n\t\t\tlet rgt2 = 0;\n\t\t\tlet rgt1 = 0;\n\t\t\tlet chars = 0;\n\t\t\tlet terms = 0;\n\t\t\tlet inter = 0;\n\t\t\tlet intra = 0;\n\n\t\t\tlet refine = [];\n\n\t\t\tfor (let j = 0, k = 2; j < partsLen; j++, k+=2) {\n\t\t\t\tlet group = m[k].toLocaleLowerCase();\n\t\t\t\tlet part = parts[j];\n\t\t\t\tlet term = part[0] == '\"' ? part.slice(1, -1) : part + contrs[j];\n\t\t\t\tlet termLen = term.length;\n\t\t\t\tlet groupLen = group.length;\n\t\t\t\tlet fullMatch = group == term;\n\n\t\t\t\t// this won't handle the case when an exact match exists across the boundary of the current group and the next junk\n\t\t\t\t// e.g. blob,ob when searching for 'bob' but finding the earlier `blob` (with extra insertion)\n\t\t\t\tif (!fullMatch && m[k+1].length >= termLen) {\n\t\t\t\t\t// probe for exact match in inter junk (TODO: maybe even in this matched part?)\n\t\t\t\t\tlet idxOf = m[k+1].toLocaleLowerCase().indexOf(term);\n\n\t\t\t\t\tif (idxOf > -1) {\n\t\t\t\t\t\trefine.push(idxAcc, groupLen, idxOf, termLen);\n\t\t\t\t\t\tidxAcc += refineMatch(m, k, idxOf, termLen);\n\t\t\t\t\t\tgroup = term;\n\t\t\t\t\t\tgroupLen = termLen;\n\t\t\t\t\t\tfullMatch = true;\n\n\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t\tstart = idxAcc;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (mayDiscard || fullMatch) {\n\t\t\t\t\t// does group's left and/or right land on \\b\n\t\t\t\t\tlet lftCharIdx = idxAcc - 1;\n\t\t\t\t\tlet rgtCharIdx = idxAcc + groupLen;\n\n\t\t\t\t\tlet isPre = false;\n\t\t\t\t\tlet isSuf = false;\n\n\t\t\t\t\t// prefix info\n\t\t\t\t\tif (lftCharIdx == -1           || interBound.test(mhstr[lftCharIdx])) {\n\t\t\t\t\t\tfullMatch && lft2++;\n\t\t\t\t\t\tisPre = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (interLft == 2) {\n\t\t\t\t\t\t\tdisc = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (withIntraBound && intraBound.test(mhstr[lftCharIdx] + mhstr[lftCharIdx + 1])) {\n\t\t\t\t\t\t\tfullMatch && lft1++;\n\t\t\t\t\t\t\tisPre = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (interLft == 1) {\n\t\t\t\t\t\t\t\t// regexps are eager, so try to improve the match by probing forward inter junk for exact match at a boundary\n\t\t\t\t\t\t\t\tlet junk = m[k+1];\n\t\t\t\t\t\t\t\tlet junkIdx = idxAcc + groupLen;\n\n\t\t\t\t\t\t\t\tif (junk.length >= termLen) {\n\t\t\t\t\t\t\t\t\tlet idxOf = 0;\n\t\t\t\t\t\t\t\t\tlet found = false;\n\t\t\t\t\t\t\t\t\tlet re = new RegExp(term, 'ig' + uFlag);\n\n\t\t\t\t\t\t\t\t\tlet m2;\n\t\t\t\t\t\t\t\t\twhile (m2 = re.exec(junk)) {\n\t\t\t\t\t\t\t\t\t\tidxOf = m2.index;\n\n\t\t\t\t\t\t\t\t\t\tlet charIdx = junkIdx + idxOf;\n\t\t\t\t\t\t\t\t\t\tlet lftCharIdx = charIdx - 1;\n\n\t\t\t\t\t\t\t\t\t\tif (lftCharIdx == -1 || interBound.test(mhstr[lftCharIdx])) {\n\t\t\t\t\t\t\t\t\t\t\tlft2++;\n\t\t\t\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if (intraBound.test(mhstr[lftCharIdx] + mhstr[charIdx])) {\n\t\t\t\t\t\t\t\t\t\t\tlft1++;\n\t\t\t\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\t\t\t\tisPre = true;\n\n\t\t\t\t\t\t\t\t\t\t// identical to exact term refinement pass above\n\t\t\t\t\t\t\t\t\t\trefine.push(idxAcc, groupLen, idxOf, termLen);\n\t\t\t\t\t\t\t\t\t\tidxAcc += refineMatch(m, k, idxOf, termLen);\n\t\t\t\t\t\t\t\t\t\tgroup = term;\n\t\t\t\t\t\t\t\t\t\tgroupLen = termLen;\n\t\t\t\t\t\t\t\t\t\tfullMatch = true;\n\n\t\t\t\t\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t\t\t\t\t\tstart = idxAcc;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (!isPre) {\n\t\t\t\t\t\t\t\t\tdisc = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// suffix info\n\t\t\t\t\tif (rgtCharIdx == mhstr.length || interBound.test(mhstr[rgtCharIdx])) {\n\t\t\t\t\t\tfullMatch && rgt2++;\n\t\t\t\t\t\tisSuf = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (interRgt == 2) {\n\t\t\t\t\t\t\tdisc = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (withIntraBound && intraBound.test(mhstr[rgtCharIdx - 1] + mhstr[rgtCharIdx])) {\n\t\t\t\t\t\t\tfullMatch && rgt1++;\n\t\t\t\t\t\t\tisSuf = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (interRgt == 1) {\n\t\t\t\t\t\t\t\tdisc = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (fullMatch) {\n\t\t\t\t\t\tchars += termLen;\n\n\t\t\t\t\t\tif (isPre && isSuf)\n\t\t\t\t\t\t\tterms++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (groupLen > termLen)\n\t\t\t\t\tintra += groupLen - termLen; // intraFuzz\n\n\t\t\t\tif (j > 0)\n\t\t\t\t\tinter += m[k-1].length; // interFuzz\n\n\t\t\t\t// TODO: group here is lowercased, which is okay for length cmp, but not more case-sensitive filts\n\t\t\t\tif (!opts.intraFilt(term, group, idxAcc)) {\n\t\t\t\t\tdisc = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (j < partsLen - 1)\n\t\t\t\t\tidxAcc += groupLen + m[k+1].length;\n\t\t\t}\n\n\t\t\tif (!disc) {\n\t\t\t\tinfo.idx[ii]       = idxs[i];\n\t\t\t\tinfo.interLft2[ii] = lft2;\n\t\t\t\tinfo.interLft1[ii] = lft1;\n\t\t\t\tinfo.interRgt2[ii] = rgt2;\n\t\t\t\tinfo.interRgt1[ii] = rgt1;\n\t\t\t\tinfo.chars[ii]     = chars;\n\t\t\t\tinfo.terms[ii]     = terms;\n\t\t\t\tinfo.interIns[ii]  = inter;\n\t\t\t\tinfo.intraIns[ii]  = intra;\n\n\t\t\t\tinfo.start[ii] = start;\n\t\t\t//\tinfo.span[ii] = span;\n\n\t\t\t\t// ranges\n\t\t\t\tlet m = mhstr.match(queryR);\n\n\t\t\t\tlet idxAcc = m.index + m[1].length;\n\n\t\t\t\tlet refLen = refine.length;\n\t\t\t\tlet ri = refLen > 0 ? 0 : Infinity;\n\t\t\t\tlet lastRi = refLen - 4;\n\n\t\t\t\tfor (let i = 2; i < m.length;) {\n\t\t\t\t\tlet len = m[i].length;\n\n\t\t\t\t\tif (ri <= lastRi && refine[ri] == idxAcc) {\n\t\t\t\t\t\tlet groupLen = refine[ri+1];\n\t\t\t\t\t\tlet idxOf    = refine[ri+2];\n\t\t\t\t\t\tlet termLen  = refine[ri+3];\n\n\t\t\t\t\t\t// advance to end of original (full) group match that includes intra-junk\n\t\t\t\t\t\tlet j = i;\n\t\t\t\t\t\tlet v = '';\n\t\t\t\t\t\tfor (let _len = 0; _len < groupLen; j++) {\n\t\t\t\t\t\t\tv += m[j];\n\t\t\t\t\t\t\t_len += m[j].length;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tm.splice(i, j - i, v);\n\n\t\t\t\t\t\tidxAcc += refineMatch(m, i, idxOf, termLen);\n\n\t\t\t\t\t\tri += 4;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tidxAcc += len;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tidxAcc = m.index + m[1].length;\n\n\t\t\t\tlet ranges = info.ranges[ii] = [];\n\t\t\t\tlet from = idxAcc;\n\t\t\t\tlet to = idxAcc;\n\n\t\t\t\tfor (let i = 2; i < m.length; i++) {\n\t\t\t\t\tlet len = m[i].length;\n\n\t\t\t\t\tidxAcc += len;\n\n\t\t\t\t\tif (i % 2 == 0)\n\t\t\t\t\t\tto = idxAcc;\n\t\t\t\t\telse if (len > 0) {\n\t\t\t\t\t\tranges.push(from, to);\n\t\t\t\t\t\tfrom = to = idxAcc;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (to > from)\n\t\t\t\t\tranges.push(from, to);\n\n\t\t\t\tii++;\n\t\t\t}\n\t\t}\n\n\t\t// trim arrays\n\t\tif (ii < idxs.length) {\n\t\t\tfor (let k in info)\n\t\t\t\tinfo[k] = info[k].slice(0, ii);\n\t\t}\n\n\t\treturn info;\n\t};\n\n\tconst refineMatch = (m, k, idxInNext, termLen) => {\n\t\t// shift the current group into the prior junk\n\t\tlet prepend = m[k] + m[k+1].slice(0, idxInNext);\n\t\tm[k-1] += prepend;\n\t\tm[k]    = m[k+1].slice(idxInNext, idxInNext + termLen);\n\t\tm[k+1]  = m[k+1].slice(idxInNext + termLen);\n\t\treturn prepend.length;\n\t};\n\n\t// returns [idxs, info, order]\n\tconst _search = (haystack, needle, outOfOrder = false, infoThresh = 1e3, preFiltered) => {\n\t\tlet needles = null;\n\t\tlet matches = null;\n\n\t\tlet negs = [];\n\n\t\tneedle = needle.replace(NEGS_RE, m => {\n\t\t\tnegs.push(m.trim().slice(1));\n\t\t\treturn '';\n\t\t});\n\n\t\tlet terms = split(needle);\n\n\t\tlet negsRe;\n\n\t\tif (negs.length > 0) {\n\t\t\tnegsRe = new RegExp(negs.join('|'), 'i' + uFlag);\n\n\t\t\tif (terms.length == 0) {\n\t\t\t\tlet idxs = [];\n\n\t\t\t\tfor (let i = 0; i < haystack.length; i++) {\n\t\t\t\t\tif (!negsRe.test(haystack[i]))\n\t\t\t\t\t\tidxs.push(i);\n\t\t\t\t}\n\n\t\t\t\treturn [idxs, null, null];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// abort search (needle is empty after pre-processing, e.g. no alpha-numeric chars)\n\t\t\tif (terms.length == 0)\n\t\t\t\treturn [null, null, null];\n\t\t}\n\n\t//\tconsole.log(negs);\n\t//\tconsole.log(needle);\n\n\t\tif (outOfOrder) {\n\t\t\t// since uFuzzy is an AND-based search, we can iteratively pre-reduce the haystack by searching\n\t\t\t// for each term in isolation before running permutations on what's left.\n\t\t\t// this is a major perf win. e.g. searching \"test man ger pp a\" goes from 570ms -> 14ms\n\t\t\tlet terms = split(needle);\n\n\t\t\tif (terms.length > 1) {\n\t\t\t\t// longest -> shortest\n\t\t\t\tlet terms2 = terms.slice().sort((a, b) => b.length - a.length);\n\n\t\t\t\tfor (let ti = 0; ti < terms2.length; ti++) {\n\t\t\t\t\t// no haystack item contained all terms\n\t\t\t\t\tif (preFiltered?.length == 0)\n\t\t\t\t\t\treturn [[], null, null];\n\n\t\t\t\t\tpreFiltered = filter(haystack, terms2[ti], preFiltered);\n\t\t\t\t}\n\n\t\t\t\tneedles = permute(terms).map(perm => perm.join(' '));\n\n\t\t\t\t// filtered matches for each needle excluding same matches for prior needles\n\t\t\t\tmatches = [];\n\n\t\t\t\t// keeps track of already-matched idxs to skip in follow-up permutations\n\t\t\t\tlet matchedIdxs = new Set();\n\n\t\t\t\tfor (let ni = 0; ni < needles.length; ni++) {\n\t\t\t\t\tif (matchedIdxs.size < preFiltered.length) {\n\t\t\t\t\t\t// filter further for this needle, exclude already-matched\n\t\t\t\t\t\tlet preFiltered2 = preFiltered.filter(idx => !matchedIdxs.has(idx));\n\n\t\t\t\t\t\tlet matched = filter(haystack, needles[ni], preFiltered2);\n\n\t\t\t\t\t\tfor (let j = 0; j < matched.length; j++)\n\t\t\t\t\t\t\tmatchedIdxs.add(matched[j]);\n\n\t\t\t\t\t\tmatches.push(matched);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tmatches.push([]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// interOR\n\t//\tconsole.log(prepQuery(needle, 1, null, true));\n\n\t\t// non-ooo or ooo w/single term\n\t\tif (needles == null) {\n\t\t\tneedles = [needle];\n\t\t\tmatches = [preFiltered?.length > 0 ? preFiltered : filter(haystack, needle)];\n\t\t}\n\n\t\tlet retInfo = null;\n\t\tlet retOrder = null;\n\n\t\tif (negs.length > 0)\n\t\t\tmatches = matches.map(idxs => idxs.filter(idx => !negsRe.test(haystack[idx])));\n\n\t\tlet matchCount = matches.reduce((acc, idxs) => acc + idxs.length, 0);\n\n\t\t// rank, sort, concat\n\t\tif (matchCount <= infoThresh) {\n\t\t\tretInfo = {};\n\t\t\tretOrder = [];\n\n\t\t\tfor (let ni = 0; ni < matches.length; ni++) {\n\t\t\t\tlet idxs = matches[ni];\n\n\t\t\t\tif (idxs == null || idxs.length == 0)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tlet needle = needles[ni];\n\t\t\t\tlet _info = info(idxs, haystack, needle);\n\t\t\t\tlet order = opts.sort(_info, haystack, needle);\n\n\t\t\t\t// offset idxs for concat'ing infos\n\t\t\t\tif (ni > 0) {\n\t\t\t\t\tfor (let i = 0; i < order.length; i++)\n\t\t\t\t\t\torder[i] += retOrder.length;\n\t\t\t\t}\n\n\t\t\t\tfor (let k in _info)\n\t\t\t\t\tretInfo[k] = (retInfo[k] ?? []).concat(_info[k]);\n\n\t\t\t\tretOrder = retOrder.concat(order);\n\t\t\t}\n\t\t}\n\n\t\treturn [\n\t\t\t[].concat(...matches),\n\t\t\tretInfo,\n\t\t\tretOrder,\n\t\t];\n\t};\n\n\treturn {\n\t\tsearch: (...args) => {\n\t\t\tlet out = _search(...args);\n\t\t\treturn out;\n\t\t},\n\t\tsplit,\n\t\tfilter,\n\t\tinfo,\n\t\tsort: opts.sort,\n\t};\n}\n\nconst latinize = (() => {\n\tlet accents = {\n\t\tA: 'ÃÃÃÃÃÄ',\n\t\ta: 'Ã¡Ã Ã£Ã¢Ã¤Ä',\n\t\tE: 'ÃÃÃÃÄ',\n\t\te: 'Ã©Ã¨ÃªÃ«Ä',\n\t\tI: 'ÃÃÃÃÄ®',\n\t\ti: 'Ã­Ã¬Ã®Ã¯Ä¯',\n\t\tO: 'ÃÃÃÃÃ',\n\t\to: 'Ã³Ã²Ã´ÃµÃ¶',\n\t\tU: 'ÃÃÃÃÅªÅ²',\n\t\tu: 'ÃºÃ¹Ã»Ã¼Å«Å³',\n\t\tC: 'ÃÄ',\n\t\tc: 'Ã§Ä',\n\t\tN: 'Ã',\n\t\tn: 'Ã±',\n\t\tS: 'Å ',\n\t\ts: 'Å¡'\n\t};\n\n\tlet accentsMap = new Map();\n\tlet accentsTpl = '';\n\n\tfor (let r in accents) {\n\t\taccents[r].split('').forEach(a => {\n\t\t\taccentsTpl += a;\n\t\t\taccentsMap.set(a, r);\n\t\t});\n\t}\n\n\tlet accentsRe = new RegExp(`[${accentsTpl}]`, 'g');\n\tlet replacer = m => accentsMap.get(m);\n\n\treturn strings => {\n\t\tif (typeof strings == 'string')\n\t\t\treturn strings.replace(accentsRe, replacer);\n\n\t\tlet out = Array(strings.length);\n\t\tfor (let i = 0; i < strings.length; i++)\n\t\t\tout[i] = strings[i].replace(accentsRe, replacer);\n\t\treturn out;\n\t};\n})();\n\n// https://stackoverflow.com/questions/9960908/permutations-in-javascript/37580979#37580979\nfunction permute(arr) {\n\tarr = arr.slice();\n\n\tlet length = arr.length,\n\t\tresult = [arr.slice()],\n\t\tc = new Array(length).fill(0),\n\t\ti = 1, k, p;\n\n\twhile (i < length) {\n\t\tif (c[i] < i) {\n\t\t\tk = i % 2 && c[i];\n\t\t\tp = arr[i];\n\t\t\tarr[i] = arr[k];\n\t\t\tarr[k] = p;\n\t\t\t++c[i];\n\t\t\ti = 1;\n\t\t\tresult.push(arr.slice());\n\t\t} else {\n\t\t\tc[i] = 0;\n\t\t\t++i;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nconst _mark = (part, matched) => matched ? `<mark>${part}</mark>` : part;\nconst _append = (acc, part) => acc + part;\n\nfunction highlight(str, ranges, mark = _mark, accum = '', append = _append) {\n\taccum = append(accum, mark(str.substring(0, ranges[0]), false)) ?? accum;\n\n\tfor (let i = 0; i < ranges.length; i+=2) {\n\t\tlet fr = ranges[i];\n\t\tlet to = ranges[i+1];\n\n\t\taccum = append(accum, mark(str.substring(fr, to), true)) ?? accum;\n\n\t\tif (i < ranges.length - 3)\n\t\t\taccum = append(accum, mark(str.substring(ranges[i+1], ranges[i+2]), false)) ?? accum;\n\t}\n\n\taccum = append(accum, mark(str.substring(ranges[ranges.length - 1]), false)) ?? accum;\n\n\treturn accum;\n}\n\nuFuzzy.latinize = latinize;\nuFuzzy.permute = arr => {\n\tlet idxs = permute([...Array(arr.length).keys()]).sort((a,b) => {\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tif (a[i] != b[i])\n\t\t\t\treturn a[i] - b[i];\n\t\t}\n\t\treturn 0;\n\t});\n\n\treturn idxs.map(pi => pi.map(i => arr[i]));\n};\nuFuzzy.highlight = highlight;\n\nexport { uFuzzy as default };\n","import {\n  For,\n  Show,\n  createEffect,\n  createSignal,\n  onMount,\n  useContext,\n  batch,\n  untrack,\n} from \"solid-js\";\nimport { RelatedStream } from \"~/types\";\nimport { HistoryItem, useSyncStore } from \"~/stores/syncStore\";\nimport { BsInfoCircleFill, BsXCircle } from \"solid-icons/bs\";\nimport Button from \"~/components/Button\";\nimport { toaster, Toast } from \"@kobalte/core\";\nimport { Portal } from \"solid-js/web\";\nimport useIntersectionObserver from \"~/hooks/useIntersectionObserver\";\nimport ImportHistoryModal from \"~/components/ImportHistoryModal\";\nimport uFuzzy from \"@leeoniya/ufuzzy\";\nimport Modal from \"~/components/Modal\";\nimport Field from \"~/components/Field\";\nimport { debounce, getVideoId } from \"~/utils/helpers\";\nimport VideoCard from \"~/components/content/stream/VideoCard\";\nimport { Title } from \"@solidjs/meta\";\n\nexport default function History() {\n  const [limit, setLimit] = createSignal(50);\n  const [items, setItems] = createSignal([]);\n  const sync = useSyncStore();\n  function deleteHistory() {\n    batch(() => {\n      Object.keys(sync.store.history).forEach((item) => {\n        sync.setStore(\"history\", item, undefined as any);\n      });\n    });\n  }\n\n  createEffect(() => {\n    if (!sync.store.history) return;\n    console.log(Object.keys(sync.store.history)?.length);\n  });\n  const [intersectionRef, setIntersectionRef] = createSignal<\n    HTMLDivElement | undefined\n  >(undefined);\n  const isIntersecting = useIntersectionObserver({\n    setTarget: () => intersectionRef(),\n  });\n  createEffect(() => {\n    if (isIntersecting()) {\n      setLimit((l) => l + 10);\n    }\n  });\n\n  const sort = (a: HistoryItem, b: HistoryItem) => {\n    const getTime = (date: number) => new Date(date).getTime();\n\n    if (!a.watchedAt) return 1;\n    if (!b.watchedAt) return -1;\n\n    const aTime = getTime(a.watchedAt);\n    const bTime = getTime(b.watchedAt);\n\n    // Check for invalid dates\n    if (isNaN(aTime)) return 1;\n    if (isNaN(bTime)) return -1;\n\n    // Check for dates before epoch time\n    if (aTime <= 0) return 1;\n    if (bTime <= 0) return -1;\n\n    return bTime - aTime;\n  };\n\n  const [history, setHistory] = createSignal<HistoryItem[]>([]);\n  const [importModalOpen, setImportModalOpen] = createSignal(false);\n  const [search, setSearch] = createSignal(\"\");\n\n  const setSearchDebounced = debounce((input: string) => {\n    setSearch(input);\n  }, 500);\n  const uf = new uFuzzy({\n    intraMode: 1,\n    intraChars: \"[w-]\",\n    intraSub: 1,\n    intraTrn: 1,\n    intraDel: 1,\n    intraIns: 1,\n  });\n\n  createEffect(() => {\n    if (search()) {\n      const strings = Object.values(sync.store.history).map(\n        (item) => `${item.title} ${item.uploaderName}`\n      );\n      const [idxs, info, sort] = uf.search(strings, search(), false);\n      const history = Object.values(sync.store.history);\n      const results = idxs?.map((idx) => history[idx])?.slice(0, limit()) ?? [];\n      setHistory(results);\n    } else {\n      if (!sync.store.history) return;\n      setHistory(\n        Object.values(sync.store.history).sort(sort).slice(0, limit())\n      );\n    }\n  });\n\n  const exportHistory = () => {\n    const history = Object.values(sync.store.history);\n    const toExport = JSON.stringify(\n      {\n        platform: \"Conduit\",\n        version: 1,\n        history,\n      },\n      null,\n      2\n    );\n    const blob = new Blob([toExport], { type: \"application/json\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    const fileName = `conduit-history-${new Date().toISOString()}.json`;\n    a.download = fileName;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const [deleteModalOpen, setDeleteModalOpen] = createSignal(false);\n  const [deleteConfirmInput, setDeleteConfirmInput] = createSignal(\"\");\n  const [touched, setTouched] = createSignal(false);\n  const [isLoading, setLoading] = createSignal(false);\n\n  return (\n    <div class=\"\">\n      <Title>History | Conduit</Title>\n      <Button label=\"Import\" onClick={() => setImportModalOpen(true)} />\n      <ImportHistoryModal\n        isOpen={importModalOpen()}\n        setIsOpen={(isOpen) => {\n          console.log(isOpen, \"setIsOpen\");\n          setImportModalOpen(isOpen);\n        }}\n      />\n      <Button label=\"Export\" onClick={exportHistory} />\n      <Button label=\"Clear\" onClick={() => setDeleteModalOpen(true)} />\n      <Modal\n        title=\"Delete history?\"\n        isOpen={deleteModalOpen()}\n        setIsOpen={setDeleteModalOpen}\n      >\n        <div class=\"flex flex-col items-center justify-center\">\n          <div class=\"text-sm text-text1\">This operation cannot be undone.</div>\n          <div class=\"flex mt-4 flex-col gap-2 items-center\">\n            <Field\n              class=\"ml-2\"\n              value={deleteConfirmInput()}\n              onInput={(v) => {\n                setTouched(false);\n                setDeleteConfirmInput(v);\n              }}\n              type=\"text\"\n              errorMessage={\n                deleteConfirmInput() !== \"DELETE\" && touched()\n                  ? \"Must type DELETE to confirm\"\n                  : \"\"\n              }\n              placeholder=\"DELETE\"\n              name=\"Type DELETE to confirm\"\n              validationState={\n                deleteConfirmInput() !== \"DELETE\" ? \"invalid\" : \"valid\"\n              }\n            />\n            <div class=\"flex gap-2\">\n              <Button\n                label=\"Cancel\"\n                onClick={() => setDeleteModalOpen(false)}\n              />\n              <Button\n                label=\"Delete\"\n                class=\"ml-2\"\n                onClick={() => {\n                  setTouched(true);\n                  if (deleteConfirmInput() === \"DELETE\") {\n                    deleteHistory();\n                    setDeleteModalOpen(false);\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </Modal>\n      <Field\n        onInput={(e) => setSearchDebounced(e)}\n        class=\"my-2 mx-auto\"\n        placeholder=\"Search...\"\n      />\n      <div class=\"flex flex-wrap justify-center h-full min-h-[80vh]\">\n        <Show when={history()}>\n          <For each={history()}>\n            {(item) => (\n              <VideoCard\n                v={{\n                  ...item,\n                  url: `/watch?v=${getVideoId(item)}`,\n                }}\n              />\n            )}\n          </For>\n          <div\n            ref={(ref) => setIntersectionRef(ref)}\n            class=\"w-full h-20 mt-2\"\n          />\n        </Show>\n      </div>\n    </div>\n  );\n}\n"],"names":["ImportHistoryModal","props","items","setItems","createSignal","index","setIndex","success","setSuccess","error","setError","skipped","setSkipped","fileSelector","itemsLength","length","fileChange","files","text","then","console","log","includes","json","JSON","parse","history","map","video","item","url","titleUrl","split","title","uploaderName","subtitles","name","uploaderUrl","watchedAt","Date","time","getTime","sort","a","b","lt","watchHistory","videoId","duration","thumbnail","thumbnailUrl","uploader","uploaded","uploadDate","currentTime","watchPositions","find","i","position","startsWith","replace","slice","ft","author","authorUrl","watchedDate","iv","watch_history","alert","sync","useSyncStore","handleImport","e","preventDefault","stopPropagation","newItems","store","id","getVideoId","push","Object","keys","importHistory","Promise","resolve","batch","forEach","setStore","toast","promise","loading","data","_$createComponent","Modal","isOpen","setIsOpen","children","_el$","_$getNextElement","_tmpl$2","_el$2","firstChild","_el$3","nextSibling","_el$4","_el$5","_el$6","_el$7","_el$9","_el$10","_el$11","_el$12","_el$13","_el$14","$$input","_ref$","_$use","currentTarget","value","Show","when","_el$8","_tmpl$","_$insert","$$click","_$effect","_$setAttribute","_$setProperty","_$runHydrationEvents","_$delegateEvents","cmp","Intl","Collator","compare","inf","Infinity","escapeRegExp","str","EXACT_HERE","LATIN_UPPER","LATIN_LOWER","swapAlpha","upper","lower","OPTS","unicode","alpha","interSplit","intraSplit","intraBound","interLft","interRgt","interChars","interIns","intraChars","intraIns","intraContr","intraMode","intraSlice","intraSub","intraTrn","intraDel","intraFilt","term","match","info","haystack","needle","idx","chars","terms","interLft2","interLft1","start","v","ia","ib","lazyRepeat","limit","mode2Tpl","uFuzzy","opts","assign","_intraSplit","_interSplit","_intraBound","letters","toLocaleUpperCase","toLocaleLowerCase","uFlag","EXACTS_RE","RegExp","NEGS_RE","intraRules","p","_intraSlice","_intraIns","_intraSub","_intraTrn","_intraDel","plen","Math","min","withIntraSplit","trimRe","contrsRe","exacts","m","j","filter","t","prepQuery","capt","interOR","parts","contrs","Array","fill","pi","reTpl","lftIdx","rgtIdx","lftChar","rgtChar","numChars","variants","intraInsTpl","join","c","preTpl","sufTpl","interCharsTpl","idxs","query","out","test","withIntraBound","interBound","queryR","partsLen","len","field","interRgt2","interRgt1","ranges","mayDiscard","ii","mhstr","idxAcc","disc","lft2","lft1","rgt2","rgt1","inter","intra","refine","k","group","part","termLen","groupLen","fullMatch","idxOf","indexOf","refineMatch","lftCharIdx","rgtCharIdx","isPre","isSuf","junk","junkIdx","found","re","m2","exec","charIdx","refLen","ri","lastRi","_len","splice","from","to","idxInNext","prepend","_search","outOfOrder","infoThresh","preFiltered","needles","matches","negs","trim","negsRe","terms2","ti","permute","perm","matchedIdxs","Set","ni","size","preFiltered2","has","matched","add","retInfo","retOrder","reduce","acc","_info","order","concat","search","args","latinize","accents","A","E","I","O","o","U","u","C","N","n","S","s","accentsMap","Map","accentsTpl","r","set","accentsRe","replacer","get","strings","arr","result","_mark","_append","highlight","mark","accum","append","substring","fr","History","setLimit","deleteHistory","undefined","createEffect","intersectionRef","setIntersectionRef","isIntersecting","useIntersectionObserver","setTarget","l","date","aTime","bTime","isNaN","setHistory","importModalOpen","setImportModalOpen","setSearch","setSearchDebounced","debounce","input","uf","values","results","exportHistory","toExport","stringify","platform","version","blob","Blob","type","URL","createObjectURL","document","createElement","href","fileName","toISOString","download","click","revokeObjectURL","deleteModalOpen","setDeleteModalOpen","deleteConfirmInput","setDeleteConfirmInput","touched","setTouched","_tmpl$3","_el$15","_co$4","_$getNextMarker","_el$16","_el$17","_co$5","_el$18","_el$19","_co$6","_el$20","_el$21","_co$7","_el$22","_el$23","_co$8","_el$24","_el$25","_co$9","_el$26","_el$27","_co$10","Title","Button","label","onClick","_co$3","_co$","_co$2","Field","onInput","errorMessage","placeholder","validationState","For","each","VideoCard","ref"],"mappings":"2uBAQA,SAAwBA,GAAmBC,EAGxC,CACD,KAAM,CAACC,EAAOC,CAAQ,EAAIC,EAAa,CAAE,CAAA,EACnC,CAACC,EAAOC,CAAQ,EAAIF,EAAa,CAAC,EAClC,CAACG,EAASC,CAAU,EAAIJ,EAAa,CAAC,EACtC,CAACK,EAAOC,EAAQ,EAAIN,EAAa,CAAC,EAClC,CAACO,GAASC,EAAU,EAAIR,EAAa,CAAC,EAC5C,IAAIS,EACJ,MAAMC,EAAcA,IAAMZ,KAASa,QAAU,EAE7C,SAASC,IAAa,CAChB,GAAA,CAACH,GAAcI,QAAQ,CAAC,EAAG,OAClBJ,EAAaI,MAAM,CAAC,EAC5BC,KAAAA,EAAOC,KAAeD,GAAA,CAIrBA,GAHJE,QAAQC,IAAIH,CAAI,EAChBf,EAAS,CAAE,CAAA,EAEPe,EAAKI,SAAS,SAAS,EAAG,CACtBC,MAAAA,EAAOC,KAAKC,MAAMP,CAAI,EAC5BE,QAAQC,IAAIE,CAAI,EAChB,MAAMG,EAAUH,EAAKG,QACrBN,QAAQC,IAAIK,CAAO,EACnBvB,EAASuB,CAAO,CAAA,SAGTR,EAAKI,SAAS,UAAU,GAAKJ,EAAKI,SAAS,SAAS,EAAG,CACxDC,MAAAA,EAAOC,KAAKC,MAAMP,CAAI,EAC5BE,QAAQC,IAAIE,CAAI,EAChB,MAAMrB,EAAQqB,EAAKI,IAAKC,GAAe,CACrC,MAAMC,EAAO,CACXC,IAAKF,EAAMG,SAASC,MAAM,yBAAyB,EAAE,CAAC,EACtDC,MAAOL,EAAMK,MACbC,aAAcN,EAAMO,UAAU,CAAC,EAAEC,KACjCC,YAAaT,EAAMO,UAAU,CAAC,EAAEL,IAAIE,MAClC,yBACF,EAAE,CAAC,EACHM,UAAW,IAAIC,KAAKX,EAAMY,IAAI,EAAEC,QAAQ,CAAA,EAE1CrB,eAAQC,IAAIQ,CAAI,EACTA,CAAAA,CACR,EACDT,QAAQC,IAAInB,CAAK,EACjBC,EACED,EAAMwC,KAAK,CAACC,EAAQC,IACXA,EAAEN,UAAYK,EAAEL,SACxB,CACH,CAGOpB,SAAAA,EAAKI,SAAS,gBAAgB,EAAG,CACxCF,QAAQC,IAAI,WAAW,EACjBE,MAAAA,EAAOC,KAAKC,MAAMP,CAAI,EACtB2B,EAAKtB,EAAKuB,aAAanB,IAAKC,IACzB,CACLE,IAAM,YAAWF,EAAMmB,OAAQ,GAC/BC,SAAUpB,EAAMoB,SAChBC,UAAWrB,EAAMsB,aACjBjB,MAAOL,EAAMK,MACbC,aAAcN,EAAMuB,SACpBd,YAAaT,EAAMS,YACnBe,SAAU,IAAIb,KAAKX,EAAMyB,UAAU,EAAEZ,QAAQ,EAC7Ca,YACE/B,EAAKgC,eAAeC,KAAMC,GAAWA,EAAEV,UAAYnB,EAAMmB,OAAO,GAC5DW,SAAW,GAAA,EAEpB,EACQb,EAAAA,EAAGH,KAAK,CAACC,EAAQC,IAAWA,EAAEN,UAAYK,EAAEL,SAAS,CAAC,CAIxDpB,SAAAA,EAAKI,SAAS,cAAc,EAAG,CAChCC,MAAAA,EAAOC,KAAKC,MAAMP,CAAI,EAC5BE,QAAQC,IAAIE,CAAI,EAChB,MAAMrB,EAAQqB,EAAKuB,aAAanB,IAAKC,IACtB,CACXoB,SAAUpB,EAAMoB,SAChBlB,IAAKF,EAAME,IACXG,MAAOL,EAAMK,MACbC,aAAcN,EAAMM,aACpBG,YAAaT,EAAMS,YACnBC,UAAWV,EAAMU,WAAa,EAC9BgB,YAAa1B,EAAM0B,aAAe,CAAA,EAGrC,EACQpD,EAAAA,EAAMwC,KAAK,CAACC,EAAQC,IAAWA,EAAEN,UAAYK,EAAEL,SAAS,CAAC,CAI3DpB,SAAAA,EAAKyC,WAAY,YAAW,EAAG,CAC9BzC,EAAA,IAAGA,EAAK0C,QAAQ,MAAO,IAAI,EAAEC,MAAM,EAAG,EAAE,CAAE,IAC9CtC,IAAAA,EAAOC,KAAKC,MAAMP,CAAI,EAC1BE,QAAQC,IAAIE,CAAI,EAChB,MAAMuC,EAAKvC,EACRI,IAAKC,IACG,CACLoB,SAAUpB,EAAMoB,SAChBC,UAAWrB,EAAMqB,UACjBhB,MAAOL,EAAMK,MACbC,aAAcN,EAAMmC,OACpB1B,YAAaT,EAAMoC,UACnBjB,QAASnB,EAAMmB,QACfT,UAAWV,EAAMqC,YACjBX,YAAa1B,EAAM0B,WAAAA,EAEtB,EACAZ,KAAK,CAACC,EAAQC,IAAWA,EAAEN,UAAYK,EAAEL,SAAS,EACrDnC,EAAS2D,CAAE,CAGJ5C,SAAAA,EAAKyC,WAAY,mBAAkB,EAAG,CACvCpC,MAAAA,EAAOC,KAAKC,MAAMP,CAAI,EAC5BE,QAAQC,IAAIE,CAAI,EAChB,MAAM2C,EAAK3C,EAAK4C,cAAcxC,IAAKC,IAC1B,CACLmB,QAASnB,EACTU,UAAW,EACXgB,YAAa,CAAA,EAEhB,EACDnD,EAAS+D,CAAE,CAAA,MAEXE,MAAM,kBAAkB,EAElB/C,QAAAA,IAAInB,GAAO,CAAA,CACpB,CACH,CACA,MAAMmE,EAAOC,KACb,eAAeC,GAAaC,EAAQ,CAClCA,EAAEC,eAAe,EACjBD,EAAEE,gBAAgB,EAElB,MAAMC,EAA0C,CAAA,EAChD,GAAI,CAACN,EAAKO,MAAO,OACN/C,UAAAA,KAAQ3B,IAA0B,CACrC2E,MAAAA,EAAKC,GAAWjD,CAAI,EAC1B,GAAI,CAACgD,EAAI,CACEpE,GAAAA,IAAU,CAAC,EACXJ,EAAAA,IAAU,CAAC,EACpB,QACF,CAEA,GADiBgE,EAAKO,MAAMlD,QAAQmD,CAAE,EACxB,CACHxE,EAAAA,IAAU,CAAC,EACTM,GAAAA,KAAY,CAAC,EACxB,QACF,CACAgE,EAASI,KAAK,CAAE,CAACF,CAAE,EAAGhD,CAAAA,CAAM,EACnBxB,EAAAA,IAAU,CAAC,EACTE,EAAAA,IAAY,CAAC,CAC1B,CACSmC,EAAAA,KAAK,CAACC,EAAGC,IACXD,EAAEqC,OAAOC,KAAKtC,CAAC,EAAE,CAAC,CAAC,EAAEL,UACtB,CAACM,EAAEoC,OAAOC,KAAKrC,CAAC,EAAE,CAAC,CAAC,EAAEN,WACtBK,EAAEqC,OAAOC,KAAKtC,CAAC,EAAE,CAAC,CAAC,EAAEL,UAAYM,EAAEoC,OAAOC,KAAKrC,CAAC,EAAE,CAAC,CAAC,EAAEN,UACjD,GACLK,EAAEqC,OAAOC,KAAKtC,CAAC,EAAE,CAAC,CAAC,EAAEL,UAAYM,EAAEoC,OAAOC,KAAKrC,CAAC,EAAE,CAAC,CAAC,EAAEN,UACjD,EACF,EANqC,CAO7C,EAED,MAAM4C,EAAe,SAAU,IAAIC,QAA8BC,GAAA,CAC/DC,GAAM,IAAM,CACVV,EAASW,QAAkBzD,GAAA,CACpB0D,EAAAA,SAAS,UAAW1D,CAAI,CAAA,CAC9B,CAAA,CACF,EACDuD,EAAQ,MAAM,CAAA,CACf,EACDI,GAAMC,QAAQP,EAAe,CAC3BQ,QAAS,oBACTnF,QAAmBoF,GACVA,EAETlF,MAAOA,IACE,yBACT,CACD,EACD,MAAMyE,EAAc,CACtB,CAIA,OAAAU,EACGC,GAAK,CACJ5D,MAAK,iBAAA,IACL6D,QAAM,CAAA,OAAE7F,EAAM6F,MAAM,EAAA,IACpBC,WAAS,CAAA,OAAE9F,EAAM8F,SAAS,EAAA,IAAAC,UAAA,CAAA,IAAAC,EAAAC,GAAAC,EAAA,EAAAC,EAAAH,EAAAI,WAAAC,EAAAF,EAAAG,YAAAC,EAAAF,EAAAD,WAAAI,EAAAH,EAAAC,YAAAG,EAAAD,EAAAF,YAAAI,GAAAD,EAAAH,YAAAK,EAAAD,GAAAJ,YAAAM,EAAAD,EAAAL,YAAAO,EAAAD,EAAAR,WAAAU,EAAAD,EAAAP,YAAAS,EAAAH,EAAAN,YAAAU,EAAAD,EAAAX,WAAAG,EAAAU,QAKyBlG,GAAU,IAAAmG,EAA7CtG,EAAY,cAAAsG,GAAAC,WAAAA,GAAAD,EAAAX,CAAA,EAAZ3F,EAAY2F,EAAAC,EAAAS,QAIR1C,IAAA,CAENnD,QAAAA,IAAImD,GAAE6C,cAAcC,KAAK,EACjCnH,EAASqB,KAAKC,MAAM+C,GAAE6C,cAAcC,KAAK,EAAE5F,OAAO,EAC1CL,QAAAA,IAAInB,GAAO,CAAA,EACpByG,EAAAA,GAAAf,EAIA2B,GAAI,CAAA,IAACC,MAAI,CAAA,OAAE1G,EAAgB,EAAA,CAAC,EAAA,IAAAkF,UAAA,CAAAyB,IAAAA,GAAAvB,GAAAwB,EAAA,EAAAC,OAAAA,EAAAF,GAAA,IACjB,SAAQ3G,EAAc,CAAA,QAAO,EAAA2G,EAAA,CAAA,CAAA,CAAA,EAAAV,EAAAA,EAKlC,IAAA,YAAWxG,EAAU,CAAA,WAAUE,EAAQ,CAAA,aAAYE,GAAU,CAAA,EAAC,EAAAsG,EAAAW,QAGjCrD,GAAYsD,OAAAC,GAAAhB,EAJjBhG,MAAAA,EAAa,CAAA,CAAA,EAAA+G,OAAAE,GAAAjB,EAA3BzG,QAAAA,EAAO,CAAA,CAAA,EAAA2H,KAAA/B,CAAA,CAAA,CAAA,CAclC,CAACgC,GAAA,CAAA,QAAA,OAAA,CAAA,ECjOD,MAAMC,GAAM,IAAIC,KAAKC,SAAS,IAAI,EAAEC,QAE9BC,GAAMC,IAGNC,GAAeC,GAAOA,EAAI7E,QAAQ,sBAAuB,MAAM,EAG/D8E,GAAa,aAEbC,GAAc,MACdC,GAAc,MAEdC,GAAYA,CAACJ,EAAKK,EAAOC,IAAUN,EAAI7E,QAAQ+E,GAAaG,CAAK,EAAElF,QAAQgF,GAAaG,CAAK,EAE7FC,GAAO,CAEZC,QAAS,GAETC,MAAO,KAGPC,WAAY,iBACZC,WAAY,aAGZC,WAAY,qCAMZC,SAAU,EACVC,SAAU,EAGVC,WAAY,IACZC,SAAUnB,GAGVoB,WAAY,YACZC,SAAU,EAEVC,WAAY,iBAGZC,UAAW,EAGXC,WAAY,CAAC,EAAGxB,EAAG,EAGnByB,SAAU,EACVC,SAAU,EACVC,SAAU,EAIVC,UAAWA,CAACC,EAAMC,EAAO/J,IAAU,GAGnCqC,KAAMA,CAAC2H,EAAMC,EAAUC,IAAW,CACjC,GAAI,CACHC,IAAAA,EACAC,MAAAA,EACAC,MAAAA,EACAC,UAAAA,EACAC,UAAAA,EAGAC,MAAAA,GACAlB,SAAAA,GACAF,SAAAA,EACA,EAAGY,EAEJ,OAAOG,EAAI7I,IAAI,CAACmJ,EAAGrH,IAAMA,CAAC,EAAEf,KAAK,CAACqI,EAAIC,IAErCP,EAAMO,CAAE,EAAIP,EAAMM,CAAE,GAEpBpB,GAASoB,CAAE,EAAIpB,GAASqB,CAAE,GAGxBN,EAAMM,CAAE,EAAIL,EAAUK,CAAE,EAAI,GAAMJ,EAAUI,CAAE,GAC9CN,EAAMK,CAAE,EAAIJ,EAAUI,CAAE,EAAI,GAAMH,EAAUG,CAAE,IAKhDtB,GAASsB,CAAE,EAAItB,GAASuB,CAAE,GAE1BH,GAAME,CAAE,EAAIF,GAAMG,CAAE,GAEpB9C,GAAIoC,EAASE,EAAIO,CAAE,CAAC,EAAGT,EAASE,EAAIQ,CAAE,CAAC,CAAC,CACxC,CACF,CACD,EAEMC,GAAaA,CAACR,EAAOS,IAC1BA,GAAS,EAAM,GACfA,GAAS,EAAMT,EAAQ,KACvBS,GAAS5C,GAAMmC,EAAQ,KACRA,EAAS,MAAKS,CAAM,KAG9BC,GAAW,YAEjB,SAASC,GAAOC,EAAM,CACrBA,EAAOrG,OAAOsG,OAAO,CAAE,EAAEtC,GAAMqC,CAAI,EAEnC,GAAI,CACHpC,QAAAA,EACAK,SAAAA,EACAC,SAAAA,EACAM,UAAAA,EACAC,WAAAA,EACAH,SAAAA,EACAI,SAAAA,EACAC,SAAAA,GACAC,SAAAA,GACAL,WAAAA,GACAR,WAAYmC,EACZpC,WAAYqC,EACZnC,WAAYoC,GACZ/B,WAAAA,CACA,EAAG2B,EAEAnC,GAAQmC,EAAKK,SAAWL,EAAKnC,MAEjC,GAAIA,IAAS,KAAM,CAClB,IAAIJ,EAAQI,GAAMyC,oBACd5C,EAAQG,GAAM0C,oBAElBJ,EAAc3C,GAAU2C,EAAa1C,EAAOC,CAAK,EACjDwC,EAAc1C,GAAU0C,EAAazC,EAAOC,CAAK,EACjD0C,GAAc5C,GAAU4C,GAAa3C,EAAOC,CAAK,EACjDW,EAAab,GAAUa,EAAYZ,EAAOC,CAAK,EAC/Ca,GAAaf,GAAUe,GAAYd,EAAOC,CAAK,CAChD,CAEA,IAAI8C,EAAQ5C,EAAU,IAAM,GAE5B,MAAM6C,EAAY,IAAIC,OAAO,QAAS,KAAOF,CAAK,EAC5CG,EAAU,IAAID,OAAQ,cAAarC,CAAW,IAAI,KAAOmC,CAAK,EAEpE,GAAI,CAAEI,WAAAA,CAAY,EAAGZ,EAEjBY,GAAc,OACjBA,EAAaC,GAAK,CAEjB,IAAIC,EAAcnD,GAAKc,WACtBsC,EAAY,EACZC,EAAY,EACZC,EAAY,EACZC,EAAY,EAETC,EAAON,EAAEnL,OAGb,OAAIyL,GAAQ,EACPA,GAAQ,IAEXF,EAAYG,KAAKC,IAAI1C,GAAU,CAAC,EAG5BwC,GAAQ,IACXJ,EAAYK,KAAKC,IAAI/C,EAAU,CAAC,KAMlCwC,EAAcrC,EACdsC,EAAYzC,EACZ0C,EAAYtC,EACZuC,EAAYtC,GACZuC,EAAYtC,IAGN,CACNH,WAAYqC,EACZxC,SAAUyC,EACVrC,SAAUsC,EACVrC,SAAUsC,EACVrC,SAAUsC,KAKb,IAAII,EAAiB,CAAC,CAACpB,EAEnBnC,EAAa,IAAI2C,OAAOR,EAAa,IAAMM,CAAK,EAChD1C,GAAa,IAAI4C,OAAOP,EAAa,IAAMK,CAAK,EAEhDe,EAAS,IAAIb,OAAO,IAAMP,EAAc,IAAMA,EAAc,IAAK,IAAMK,CAAK,EAC5EgB,EAAW,IAAId,OAAOnC,GAAY,KAAOiC,CAAK,EAElD,MAAM7J,EAAQuI,GAAU,CACvB,IAAIuC,EAAS,CAAA,EAEbvC,EAASA,EAAO3G,QAAQkI,EAAWiB,IAClCD,EAAO/H,KAAKgI,CAAC,EACNrE,GACP,EAED6B,EAASA,EAAO3G,QAAQgJ,EAAQ,EAAE,EAAEhB,oBAEhCe,IACHpC,EAASA,EAAO3G,QAAQwF,EAAY2D,GAAKA,EAAE,CAAC,EAAI,IAAMA,EAAE,CAAC,CAAC,GAE3D,IAAIC,EAAI,EACR,OAAOzC,EAAOvI,MAAMmH,EAAU,EAAE8D,OAAOC,GAAKA,GAAK,EAAE,EAAEvL,IAAImJ,GAAKA,IAAMpC,GAAaoE,EAAOE,GAAG,EAAIlC,CAAC,GAG3FqC,EAAYA,CAAC5C,EAAQ6C,EAAO,EAAGC,EAAU,KAAU,CAExD,IAAIC,EAAQtL,EAAMuI,CAAM,EAExB,GAAI+C,EAAMvM,QAAU,EACnB,MAAO,CAAA,EAGR,IAAIwM,EAASC,MAAMF,EAAMvM,MAAM,EAAE0M,KAAK,EAAE,EACxCH,EAAQA,EAAM3L,IAAI,CAACuK,EAAGwB,IAAOxB,EAAEtI,QAAQiJ,EAAUE,IAChDQ,EAAOG,CAAE,EAAIX,EACN,GACP,CAAC,EAGF,IAAIY,EAGJ,GAAI9D,GAAa,EAChB8D,EAAQL,EAAM3L,IAAI,CAACuK,EAAGwB,IAAO,CAC5B,GAAI,CACH5D,WAAAA,EACAH,SAAAA,EACAI,SAAAA,EACAC,SAAAA,EACAC,SAAAA,CACD,EAAIgC,EAAWC,CAAC,EAEhB,GAAIvC,EAAWI,EAAWC,EAAWC,GAAY,EAChD,OAAOiC,EAAIqB,EAAOG,CAAE,EAErB,GAAIxB,EAAE,CAAC,IAAM,IACZ,OAAO1D,GAAa0D,EAAErI,MAAM,EAAG,EAAE,CAAC,EAEnC,GAAI,CAAC+J,EAAQC,CAAM,EAAI/D,EACnBgE,EAAU5B,EAAErI,MAAM,EAAG+J,CAAM,EAC3BG,EAAU7B,EAAErI,MAAMgK,CAAM,EAExBpD,EAAQyB,EAAErI,MAAM+J,EAAQC,CAAM,EAI9BlE,GAAY,GAAKmE,EAAQ/M,QAAU,GAAK+M,GAAWrD,EAAM,CAAC,IAC7DqD,GAAW,MAAQA,EAAU,KAE9B,IAAIE,GAAWvD,EAAM1J,OAEjBkN,GAAW,CAAC/B,CAAC,EAGjB,GAAInC,EACH,QAAStG,EAAI,EAAGA,EAAIuK,GAAUvK,IAC7BwK,GAASlJ,KAAK+I,EAAUrD,EAAM5G,MAAM,EAAGJ,CAAC,EAAIiG,EAAae,EAAM5G,MAAMJ,EAAI,CAAC,EAAIsK,CAAO,EAIvF,GAAI/D,EACH,QAASvG,EAAI,EAAGA,EAAIuK,GAAW,EAAGvK,IAC7BgH,EAAMhH,CAAC,GAAKgH,EAAMhH,EAAE,CAAC,GACxBwK,GAASlJ,KAAK+I,EAAUrD,EAAM5G,MAAM,EAAGJ,CAAC,EAAIgH,EAAMhH,EAAE,CAAC,EAAIgH,EAAMhH,CAAC,EAAIgH,EAAM5G,MAAMJ,EAAI,CAAC,EAAIsK,CAAO,EAKnG,GAAI9D,EACH,QAASxG,EAAI,EAAGA,EAAIuK,GAAUvK,IAC7BwK,GAASlJ,KAAK+I,EAAUrD,EAAM5G,MAAM,EAAGJ,EAAI,CAAC,EAAI,IAAMgH,EAAM5G,MAAMJ,EAAI,CAAC,EAAIsK,CAAO,EAIpF,GAAIpE,EAAU,CACb,IAAIuE,EAAcjD,GAAWvB,EAAY,CAAC,EAE1C,QAASjG,GAAI,EAAGA,GAAIuK,GAAUvK,KAC7BwK,GAASlJ,KAAK+I,EAAUrD,EAAM5G,MAAM,EAAGJ,EAAC,EAAIyK,EAAczD,EAAM5G,MAAMJ,EAAC,EAAIsK,CAAO,CACpF,CAMA,MAJY,MAAQE,GAASE,KAAK,GAAG,EAAI,IAAMZ,EAAOG,CAAE,CAKzD,CAAC,MAEG,CACJ,IAAIQ,EAAcjD,GAAWvB,EAAYC,CAAQ,EAG7CyD,GAAQ,GAAKzD,EAAW,IAG3BuE,EAAc,KAAOA,EAAc,MAGpCP,EAAQL,EAAM3L,IAAI,CAACuK,EAAGwB,IAAOxB,EAAE,CAAC,IAAM,IAAM1D,GAAa0D,EAAErI,MAAM,EAAG,EAAE,CAAC,EAAKqI,EAAElK,MAAM,EAAE,EAAEL,IAAI,CAACyM,EAAG3K,EAAGgH,KAG9Fd,GAAY,GAAKlG,GAAK,GAAKgH,EAAM1J,OAAS,GAAKqN,GAAK3D,EAAMhH,EAAE,CAAC,IAChE2K,GAAK,MAAQA,EAAI,KAEXA,EACP,EAAED,KAAKD,CAAW,EAAIX,EAAOG,CAAE,CAAC,CAClC,CAMA,IAAIW,EAAS/E,GAAY,EAAI6B,GAAW,GACpCmD,EAAS/E,GAAY,EAAI4B,GAAW,GAEpCoD,GAAgBD,EAASrD,GAAWI,EAAK7B,WAAY6B,EAAK5B,QAAQ,EAAI4E,EAG1E,OAAIjB,EAAO,EACNC,EAEHM,EAAQU,EAAS,IAAMV,EAAMQ,KAAK,IAAMG,EAAS,IAAMD,EAAS,GAAG,EAAI,IAAMC,GAK7EX,EAAQ,IAAMA,EAAMQ,KAAK,KAAOI,GAAgB,IAAI,EAAI,IACxDZ,EAAQ,OAASU,EAAS,IAAMV,EAAQ,IAAMW,EAAS,QAIxDX,EAAQA,EAAMQ,KAAKI,EAAa,EAChCZ,EAAQU,EAASV,EAAQW,GAKnB,CAAC,IAAIvC,OAAO4B,EAAO,IAAM9B,CAAK,EAAGyB,EAAOC,CAAM,GAGhDN,EAASA,CAAC3C,EAAUC,EAAQiE,IAAS,CAE1C,GAAI,CAACC,CAAK,EAAItB,EAAU5C,CAAM,EAE9B,GAAIkE,GAAS,KACZ,OAAO,KAER,IAAIC,EAAM,CAAA,EAEV,GAAIF,GAAQ,KACX,QAAS/K,EAAI,EAAGA,EAAI+K,EAAKzN,OAAQ0C,IAAK,CACrC,IAAI+G,EAAMgE,EAAK/K,CAAC,EAChBgL,EAAME,KAAKrE,EAASE,CAAG,CAAC,GAAKkE,EAAI3J,KAAKyF,CAAG,CAC1C,KAGA,SAAS/G,EAAI,EAAGA,EAAI6G,EAASvJ,OAAQ0C,IACpCgL,EAAME,KAAKrE,EAAS7G,CAAC,CAAC,GAAKiL,EAAI3J,KAAKtB,CAAC,EAGvC,OAAOiL,GAGR,IAAIE,EAAiB,CAAC,CAACnD,GAEnBoD,EAAa,IAAI9C,OAAOP,EAAaK,CAAK,EAC1CxC,GAAa,IAAI0C,OAAON,GAAaI,CAAK,EAE9C,MAAMxB,GAAOA,CAACmE,EAAMlE,EAAUC,IAAW,CAExC,GAAI,CAACkE,EAAOnB,EAAOC,CAAM,EAAIJ,EAAU5C,EAAQ,CAAC,EAC5C,CAACuE,CAAM,EAAI3B,EAAU5C,EAAQ,CAAC,EAC9BwE,EAAWzB,EAAMvM,OAEjBiO,GAAMR,EAAKzN,OAEXkO,EAAQzB,MAAMwB,EAAG,EAAEvB,KAAK,CAAC,EAEzBpD,EAAO,CAEVG,IAAKgD,MAAMwB,EAAG,EAGdnE,MAAOoE,EAAMpL,MAAO,EAKpB4G,MAAOwE,EAAMpL,MAAO,EAIpB6G,MAAOuE,EAAMpL,MAAO,EAGpB4F,SAAUwF,EAAMpL,MAAO,EACvB8F,SAAUsF,EAAMpL,MAAO,EAGvB8G,UAAWsE,EAAMpL,MAAO,EACxBqL,UAAWD,EAAMpL,MAAO,EACxB+G,UAAWqE,EAAMpL,MAAO,EACxBsL,UAAWF,EAAMpL,MAAO,EAExBuL,OAAQ5B,MAAMwB,EAAG,GAIdK,EAAa/F,GAAY,GAAKC,GAAY,EAE1C+F,EAAK,EAET,QAAS7L,EAAI,EAAGA,EAAI+K,EAAKzN,OAAQ0C,IAAK,CACrC,IAAI8L,EAAQjF,EAASkE,EAAK/K,CAAC,CAAC,EAGxBsJ,EAAIwC,EAAMnF,MAAMqE,CAAK,EAGrB5D,EAAQkC,EAAE1M,MAAQ0M,EAAE,CAAC,EAAEhM,OAEvByO,EAAS3E,EAGT4E,EAAO,GACPC,EAAO,EACPC,EAAO,EACPC,GAAO,EACPC,GAAO,EACPpF,GAAQ,EACRC,EAAQ,EACRoF,GAAQ,EACRC,GAAQ,EAERC,GAAS,CAAA,EAEb,QAAShD,EAAI,EAAGiD,EAAI,EAAGjD,EAAI+B,EAAU/B,IAAKiD,GAAG,EAAG,CAC/C,IAAIC,GAAQnD,EAAEkD,CAAC,EAAErE,kBAAiB,EAC9BuE,GAAO7C,EAAMN,CAAC,EACd7C,GAAOgG,GAAK,CAAC,GAAK,IAAMA,GAAKtM,MAAM,EAAG,EAAE,EAAIsM,GAAO5C,EAAOP,CAAC,EAC3DoD,EAAUjG,GAAKpJ,OACfsP,EAAWH,GAAMnP,OACjBuP,EAAYJ,IAAS/F,GAIzB,GAAI,CAACmG,GAAavD,EAAEkD,EAAE,CAAC,EAAElP,QAAUqP,EAAS,CAE3C,IAAIG,EAAQxD,EAAEkD,EAAE,CAAC,EAAErE,kBAAmB,EAAC4E,QAAQrG,EAAI,EAE/CoG,EAAQ,KACXP,GAAOjL,KAAKyK,EAAQa,EAAUE,EAAOH,CAAO,EAC5CZ,GAAUiB,GAAY1D,EAAGkD,EAAGM,EAAOH,CAAO,EAC1CF,GAAQ/F,GACRkG,EAAWD,EACXE,EAAY,GAERtD,GAAK,IACRnC,EAAQ2E,GAEX,CAEA,GAAIH,GAAciB,EAAW,CAE5B,IAAII,EAAalB,EAAS,EACtBmB,GAAanB,EAASa,EAEtBO,GAAQ,GACRC,GAAQ,GAGZ,GAAIH,GAAc,IAAgB7B,EAAWF,KAAKY,EAAMmB,CAAU,CAAC,EAClEJ,GAAaZ,IACbkB,GAAQ,OAEJ,CACJ,GAAItH,GAAY,EAAG,CAClBmG,EAAO,GACP,KACD,CAEA,GAAIb,GAAkBvF,GAAWsF,KAAKY,EAAMmB,CAAU,EAAInB,EAAMmB,EAAa,CAAC,CAAC,EAC9EJ,GAAaX,IACbiB,GAAQ,WAGJtH,GAAY,EAAG,CAElB,IAAIwH,GAAO/D,EAAEkD,EAAE,CAAC,EACZc,GAAUvB,EAASa,EAEvB,GAAIS,GAAK/P,QAAUqP,EAAS,CAC3B,IAAIG,GAAQ,EACRS,GAAQ,GACRC,GAAK,IAAIlF,OAAO5B,GAAM,KAAO0B,CAAK,EAElCqF,GACJ,KAAOA,GAAKD,GAAGE,KAAKL,EAAI,GAAG,CAC1BP,GAAQW,GAAG7Q,MAEX,IAAI+Q,GAAUL,GAAUR,GACpBG,GAAaU,GAAU,EAE3B,GAAIV,IAAc,IAAM7B,EAAWF,KAAKY,EAAMmB,EAAU,CAAC,EAAG,CAC3DhB,IACAsB,GAAQ,GACR,KACD,SACS3H,GAAWsF,KAAKY,EAAMmB,EAAU,EAAInB,EAAM6B,EAAO,CAAC,EAAG,CAC7DzB,IACAqB,GAAQ,GACR,KACD,CACD,CAEIA,KACHJ,GAAQ,GAGRZ,GAAOjL,KAAKyK,EAAQa,EAAUE,GAAOH,CAAO,EAC5CZ,GAAUiB,GAAY1D,EAAGkD,EAAGM,GAAOH,CAAO,EAC1CF,GAAQ/F,GACRkG,EAAWD,EACXE,EAAY,GAERtD,GAAK,IACRnC,EAAQ2E,GAEX,CAEA,GAAI,CAACoB,GAAO,CACXnB,EAAO,GACP,KACD,CACD,CAEF,CAGA,GAAIkB,IAAcpB,EAAMxO,QAAU8N,EAAWF,KAAKY,EAAMoB,EAAU,CAAC,EAClEL,GAAaV,KACbiB,GAAQ,OAEJ,CACJ,GAAItH,GAAY,EAAG,CAClBkG,EAAO,GACP,KACD,CAEA,GAAIb,GAAkBvF,GAAWsF,KAAKY,EAAMoB,GAAa,CAAC,EAAIpB,EAAMoB,EAAU,CAAC,EAC9EL,GAAaT,KACbgB,GAAQ,WAGJtH,GAAY,EAAG,CAClBkG,EAAO,GACP,KACD,CAEF,CAEIa,IACH7F,IAAS2F,EAELQ,IAASC,IACZnG,IAEH,CASA,GAPI2F,EAAWD,IACdL,IAASM,EAAWD,GAEjBpD,EAAI,IACP8C,IAAS/C,EAAEkD,EAAE,CAAC,EAAElP,QAGb,CAACsK,EAAKnB,UAAUC,GAAM+F,GAAOV,CAAM,EAAG,CACzCC,EAAO,GACP,KACD,CAEIzC,EAAI+B,EAAW,IAClBS,GAAUa,EAAWtD,EAAEkD,EAAE,CAAC,EAAElP,OAC9B,CAEA,GAAI,CAAC0O,EAAM,CACVpF,EAAKG,IAAI8E,CAAE,EAAUd,EAAK/K,CAAC,EAC3B4G,EAAKM,UAAU2E,CAAE,EAAII,EACrBrF,EAAKO,UAAU0E,CAAE,EAAIK,EACrBtF,EAAK6E,UAAUI,CAAE,EAAIM,GACrBvF,EAAK8E,UAAUG,CAAE,EAAIO,GACrBxF,EAAKI,MAAM6E,CAAE,EAAQ7E,GACrBJ,EAAKK,MAAM4E,CAAE,EAAQ5E,EACrBL,EAAKZ,SAAS6F,CAAE,EAAKQ,GACrBzF,EAAKV,SAAS2F,CAAE,EAAKS,GAErB1F,EAAKQ,MAAMyE,CAAE,EAAIzE,EAIjB,IAAIkC,EAAIwC,EAAMnF,MAAM0E,CAAM,EAEtBU,EAASzC,EAAE1M,MAAQ0M,EAAE,CAAC,EAAEhM,OAExBsQ,GAASrB,GAAOjP,OAChBuQ,GAAKD,GAAS,EAAI,EAAI9I,IACtBgJ,GAASF,GAAS,EAEtB,QAAS5N,EAAI,EAAGA,EAAIsJ,EAAEhM,QAAS,CAC9B,IAAIiO,GAAMjC,EAAEtJ,CAAC,EAAE1C,OAEf,GAAIuQ,IAAMC,IAAUvB,GAAOsB,EAAE,GAAK9B,EAAQ,CACzC,IAAIa,GAAWL,GAAOsB,GAAG,CAAC,EACtBf,GAAWP,GAAOsB,GAAG,CAAC,EACtBlB,GAAWJ,GAAOsB,GAAG,CAAC,EAGtBtE,GAAIvJ,EACJqH,GAAI,GACR,QAAS0G,GAAO,EAAGA,GAAOnB,GAAUrD,KACnClC,IAAKiC,EAAEC,EAAC,EACRwE,IAAQzE,EAAEC,EAAC,EAAEjM,OAGdgM,EAAE0E,OAAOhO,EAAGuJ,GAAIvJ,EAAGqH,EAAC,EAEpB0E,GAAUiB,GAAY1D,EAAGtJ,EAAG8M,GAAOH,EAAO,EAE1CkB,IAAM,CACP,MAEC9B,GAAUR,GACVvL,GAEF,CAEA+L,EAASzC,EAAE1M,MAAQ0M,EAAE,CAAC,EAAEhM,OAExB,IAAIqO,EAAS/E,EAAK+E,OAAOE,CAAE,EAAI,CAAA,EAC3BoC,EAAOlC,EACPmC,EAAKnC,EAET,QAAS/L,EAAI,EAAGA,EAAIsJ,EAAEhM,OAAQ0C,IAAK,CAClC,IAAIuL,GAAMjC,EAAEtJ,CAAC,EAAE1C,OAEfyO,GAAUR,GAENvL,EAAI,GAAK,EACZkO,EAAKnC,EACGR,GAAM,IACdI,EAAOrK,KAAK2M,EAAMC,CAAE,EACpBD,EAAOC,EAAKnC,EAEd,CAEImC,EAAKD,GACRtC,EAAOrK,KAAK2M,EAAMC,CAAE,EAErBrC,GACD,CACD,CAGA,GAAIA,EAAKd,EAAKzN,OACb,QAASkP,KAAK5F,EACbA,EAAK4F,CAAC,EAAI5F,EAAK4F,CAAC,EAAEpM,MAAM,EAAGyL,CAAE,EAG/B,OAAOjF,GAGFoG,GAAcA,CAAC1D,EAAGkD,EAAG2B,EAAWxB,IAAY,CAEjD,IAAIyB,EAAU9E,EAAEkD,CAAC,EAAIlD,EAAEkD,EAAE,CAAC,EAAEpM,MAAM,EAAG+N,CAAS,EAC9C7E,OAAAA,EAAEkD,EAAE,CAAC,GAAK4B,EACV9E,EAAEkD,CAAC,EAAOlD,EAAEkD,EAAE,CAAC,EAAEpM,MAAM+N,EAAWA,EAAYxB,CAAO,EACrDrD,EAAEkD,EAAE,CAAC,EAAKlD,EAAEkD,EAAE,CAAC,EAAEpM,MAAM+N,EAAYxB,CAAO,EACnCyB,EAAQ9Q,QAIV+Q,GAAUA,CAACxH,EAAUC,EAAQwH,EAAa,GAAOC,EAAa,IAAKC,IAAgB,CACxF,IAAIC,EAAU,KACVC,EAAU,KAEVC,EAAO,CAAA,EAEX7H,EAASA,EAAO3G,QAAQoI,EAASe,IAChCqF,EAAKrN,KAAKgI,EAAEsF,KAAM,EAACxO,MAAM,CAAC,CAAC,EACpB,GACP,EAED,IAAI6G,GAAQ1I,EAAMuI,CAAM,EAEpB+H,EAEJ,GAAIF,EAAKrR,OAAS,GAGjB,GAFAuR,EAAS,IAAIvG,OAAOqG,EAAKjE,KAAK,GAAG,EAAG,IAAMtC,CAAK,EAE3CnB,GAAM3J,QAAU,EAAG,CACtB,IAAIyN,EAAO,CAAA,EAEX,QAAS/K,EAAI,EAAGA,EAAI6G,EAASvJ,OAAQ0C,IAC/B6O,EAAO3D,KAAKrE,EAAS7G,CAAC,CAAC,GAC3B+K,EAAKzJ,KAAKtB,CAAC,EAGb,MAAO,CAAC+K,EAAM,KAAM,IAAI,CACzB,UAII9D,GAAM3J,QAAU,EACnB,MAAO,CAAC,KAAM,KAAM,IAAI,EAM1B,GAAIgR,EAAY,CAIf,IAAIrH,EAAQ1I,EAAMuI,CAAM,EAExB,GAAIG,EAAM3J,OAAS,EAAG,CAErB,IAAIwR,EAAS7H,EAAM7G,MAAK,EAAGnB,KAAK,CAACC,EAAGC,IAAMA,EAAE7B,OAAS4B,EAAE5B,MAAM,EAE7D,QAASyR,EAAK,EAAGA,EAAKD,EAAOxR,OAAQyR,IAAM,CAE1C,GAAIP,GAAalR,QAAU,EAC1B,MAAO,CAAC,GAAI,KAAM,IAAI,EAEvBkR,EAAchF,EAAO3C,EAAUiI,EAAOC,CAAE,EAAGP,CAAW,CACvD,CAEAC,EAAUO,GAAQ/H,CAAK,EAAE/I,IAAI+Q,GAAQA,EAAKvE,KAAK,GAAG,CAAC,EAGnDgE,EAAU,CAAA,EAGV,IAAIQ,EAAc,IAAIC,IAEtB,QAASC,EAAK,EAAGA,EAAKX,EAAQnR,OAAQ8R,IACrC,GAAIF,EAAYG,KAAOb,EAAYlR,OAAQ,CAE1C,IAAIgS,EAAed,EAAYhF,OAAOzC,GAAO,CAACmI,EAAYK,IAAIxI,CAAG,CAAC,EAE9DyI,EAAUhG,EAAO3C,EAAU4H,EAAQW,CAAE,EAAGE,CAAY,EAExD,QAAS/F,EAAI,EAAGA,EAAIiG,EAAQlS,OAAQiM,IACnC2F,EAAYO,IAAID,EAAQjG,CAAC,CAAC,EAE3BmF,EAAQpN,KAAKkO,CAAO,CACrB,MAECd,EAAQpN,KAAK,CAAA,CAAE,CAElB,CACD,CAMImN,GAAW,OACdA,EAAU,CAAC3H,CAAM,EACjB4H,EAAU,CAACF,GAAalR,OAAS,EAAIkR,EAAchF,EAAO3C,EAAUC,CAAM,CAAC,GAG5E,IAAI4I,EAAU,KACVC,EAAW,KAQf,GANIhB,EAAKrR,OAAS,IACjBoR,EAAUA,EAAQxQ,IAAI6M,GAAQA,EAAKvB,OAAOzC,GAAO,CAAC8H,EAAO3D,KAAKrE,EAASE,CAAG,CAAC,CAAC,CAAC,GAE7D2H,EAAQkB,OAAO,CAACC,EAAK9E,IAAS8E,EAAM9E,EAAKzN,OAAQ,CAAC,GAGjDiR,EAAY,CAC7BmB,EAAU,CAAA,EACVC,EAAW,CAAA,EAEX,QAASP,EAAK,EAAGA,EAAKV,EAAQpR,OAAQ8R,IAAM,CAC3C,IAAIrE,EAAO2D,EAAQU,CAAE,EAErB,GAAIrE,GAAQ,MAAQA,EAAKzN,QAAU,EAClC,SAED,IAAIwJ,EAAS2H,EAAQW,CAAE,EACnBU,EAAQlJ,GAAKmE,EAAMlE,EAAUC,CAAM,EACnCiJ,EAAQnI,EAAK3I,KAAK6Q,EAAOjJ,EAAUC,CAAM,EAG7C,GAAIsI,EAAK,EACR,QAASpP,EAAI,EAAGA,EAAI+P,EAAMzS,OAAQ0C,IACjC+P,EAAM/P,CAAC,GAAK2P,EAASrS,OAGvB,QAASkP,KAAKsD,EACbJ,EAAQlD,CAAC,GAAKkD,EAAQlD,CAAC,GAAK,CAAA,GAAIwD,OAAOF,EAAMtD,CAAC,CAAC,EAEhDmD,EAAWA,EAASK,OAAOD,CAAK,CACjC,CACD,CAEA,MAAO,CACN,CAAE,EAACC,OAAO,GAAGtB,CAAO,EACpBgB,EACAC,CAAQ,GAIV,MAAO,CACNM,OAAQA,IAAIC,IACD7B,GAAQ,GAAG6B,CAAI,EAG1B3R,MAAAA,EACAiL,OAAAA,EACA5C,KAAAA,GACA3H,KAAM2I,EAAK3I,KAEb,CAEA,MAAMkR,IAAY,IAAM,CACvB,IAAIC,EAAU,CACbC,EAAG,SACHnR,EAAG,SACHoR,EAAG,QACHvP,EAAG,QACHwP,EAAG,QACHvQ,EAAG,QACHwQ,EAAG,QACHC,EAAG,QACHC,EAAG,SACHC,EAAG,SACHC,EAAG,KACHjG,EAAG,KACHkG,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,KAGAC,EAAa,IAAIC,IACjBC,EAAa,GAEjB,QAASC,KAAKhB,EACbA,EAAQgB,CAAC,EAAE7S,MAAM,EAAE,EAAEsD,QAAQ3C,GAAK,CACjCiS,GAAcjS,EACd+R,EAAWI,IAAInS,EAAGkS,CAAC,CACpB,CAAC,EAGF,IAAIE,EAAY,IAAIhJ,OAAQ,IAAG6I,CAAW,IAAI,GAAG,EAC7CI,EAAWjI,GAAK2H,EAAWO,IAAIlI,CAAC,EAEpC,OAAOmI,GAAW,CACjB,GAAI,OAAOA,GAAW,SACrB,OAAOA,EAAQtR,QAAQmR,EAAWC,CAAQ,EAE3C,IAAItG,EAAMlB,MAAM0H,EAAQnU,MAAM,EAC9B,QAAS0C,EAAI,EAAGA,EAAIyR,EAAQnU,OAAQ0C,IACnCiL,EAAIjL,CAAC,EAAIyR,EAAQzR,CAAC,EAAEG,QAAQmR,EAAWC,CAAQ,EAChD,OAAOtG,EAET,KAGA,SAAS+D,GAAQ0C,EAAK,CACrBA,EAAMA,EAAItR,QAEV,IAAI9C,EAASoU,EAAIpU,OAChBqU,EAAS,CAACD,EAAItR,OAAO,EACrBuK,EAAI,IAAIZ,MAAMzM,CAAM,EAAE0M,KAAK,CAAC,EAC5BhK,EAAI,EAAGwM,EAAG/D,EAEX,KAAOzI,EAAI1C,GACNqN,EAAE3K,CAAC,EAAIA,GACVwM,EAAIxM,EAAI,GAAK2K,EAAE3K,CAAC,EAChByI,EAAIiJ,EAAI1R,CAAC,EACT0R,EAAI1R,CAAC,EAAI0R,EAAIlF,CAAC,EACdkF,EAAIlF,CAAC,EAAI/D,EACT,EAAEkC,EAAE3K,CAAC,EACLA,EAAI,EACJ2R,EAAOrQ,KAAKoQ,EAAItR,MAAO,CAAA,IAEvBuK,EAAE3K,CAAC,EAAI,EACP,EAAEA,GAIJ,OAAO2R,CACR,CAEA,MAAMC,GAAQA,CAAClF,EAAM8C,IAAYA,EAAW,SAAQ9C,CAAK,UAAWA,EAC9DmF,GAAUA,CAAChC,EAAKnD,IAASmD,EAAMnD,EAErC,SAASoF,GAAU9M,EAAK2G,EAAQoG,EAAOH,GAAOI,EAAQ,GAAIC,EAASJ,GAAS,CAC3EG,EAAQC,EAAOD,EAAOD,EAAK/M,EAAIkN,UAAU,EAAGvG,EAAO,CAAC,CAAC,EAAG,EAAK,CAAC,GAAKqG,EAEnE,QAAShS,EAAI,EAAGA,EAAI2L,EAAOrO,OAAQ0C,GAAG,EAAG,CACxC,IAAImS,EAAKxG,EAAO3L,CAAC,EACbkO,EAAKvC,EAAO3L,EAAE,CAAC,EAEnBgS,EAAQC,EAAOD,EAAOD,EAAK/M,EAAIkN,UAAUC,EAAIjE,CAAE,EAAG,EAAI,CAAC,GAAK8D,EAExDhS,EAAI2L,EAAOrO,OAAS,IACvB0U,EAAQC,EAAOD,EAAOD,EAAK/M,EAAIkN,UAAUvG,EAAO3L,EAAE,CAAC,EAAG2L,EAAO3L,EAAE,CAAC,CAAC,EAAG,EAAK,CAAC,GAAKgS,EACjF,CAEAA,OAAAA,EAAQC,EAAOD,EAAOD,EAAK/M,EAAIkN,UAAUvG,EAAOA,EAAOrO,OAAS,CAAC,CAAC,EAAG,EAAK,CAAC,GAAK0U,EAEzEA,CACR,CAEArK,GAAOwI,SAAWA,GAClBxI,GAAOqH,QAAU0C,GACL1C,GAAQ,CAAC,GAAGjF,MAAM2H,EAAIpU,MAAM,EAAEkE,KAAM,CAAA,CAAC,EAAEvC,KAAK,CAACC,EAAEC,IAAM,CAC/D,QAASa,EAAI,EAAGA,EAAId,EAAE5B,OAAQ0C,IAC7B,GAAId,EAAEc,CAAC,GAAKb,EAAEa,CAAC,EACd,OAAOd,EAAEc,CAAC,EAAIb,EAAEa,CAAC,EAEnB,MAAO,EACR,CAAC,EAEW9B,IAAI+L,GAAMA,EAAG/L,IAAI8B,GAAK0R,EAAI1R,CAAC,CAAC,CAAC,EAE1C2H,GAAOmK,UAAYA,waC55BnB,SAAwBM,IAAU,CAChC,KAAM,CAAC3K,EAAO4K,CAAQ,EAAI1V,EAAa,EAAE,EACfA,EAAa,CAAA,CAAE,EACzC,MAAMiE,EAAOC,KACb,SAASyR,GAAgB,CACvB1Q,GAAM,IAAM,CACVL,OAAOC,KAAKZ,EAAKO,MAAMlD,OAAO,EAAE4D,QAAkBzD,GAAA,CAC3C0D,EAAAA,SAAS,UAAW1D,EAAMmU,MAAiB,CAAA,CACjD,CAAA,CACF,CACH,CAEAC,GAAa,IAAM,CACZ5R,EAAKO,MAAMlD,SAChBN,QAAQC,IAAI2D,OAAOC,KAAKZ,EAAKO,MAAMlD,OAAO,GAAGX,MAAM,CAAA,CACpD,EACD,KAAM,CAACmV,EAAiBC,CAAkB,EAAI/V,EAE5C4V,MAAS,EACLI,EAAiBC,GAAwB,CAC7CC,UAAWA,IAAMJ,EAAgB,CAAA,CAClC,EACDD,GAAa,IAAM,CACbG,KACQG,EAAAA,GAAMA,EAAI,EAAE,CACxB,CACD,EAEK7T,MAAAA,EAAOA,CAACC,EAAgBC,IAAmB,CAC/C,MAAMH,EAAW+T,GAAiB,IAAIjU,KAAKiU,CAAI,EAAE/T,UAEjD,GAAI,CAACE,EAAEL,UAAkB,MAAA,GACzB,GAAI,CAACM,EAAEN,UAAkB,MAAA,GAEnBmU,MAAAA,EAAQhU,EAAQE,EAAEL,SAAS,EAC3BoU,EAAQjU,EAAQG,EAAEN,SAAS,EAGjC,OAAIqU,MAAMF,CAAK,EAAU,EACrBE,MAAMD,CAAK,EAAU,GAGrBD,GAAS,EAAU,EACnBC,GAAS,EAAU,GAEhBA,EAAQD,CAAAA,EAGX,CAAC/U,GAASkV,EAAU,EAAIxW,EAA4B,CAAE,CAAA,EACtD,CAACyW,GAAiBC,CAAkB,EAAI1W,EAAa,EAAK,EAC1D,CAACsT,EAAQqD,EAAS,EAAI3W,EAAa,EAAE,EAErC4W,EAAqBC,GAAUC,GAAkB,CACrDH,GAAUG,CAAK,GACd,GAAG,EACAC,GAAK,IAAI/L,GAAO,CACpBvB,UAAW,EACXH,WAAY,OACZK,SAAU,EACVC,SAAU,EACVC,SAAU,EACVN,SAAU,CAAA,CACX,EAEDsM,GAAa,IAAM,CACjB,GAAIvC,IAAU,CACZ,MAAMwB,EAAUlQ,OAAOoS,OAAO/S,EAAKO,MAAMlD,OAAO,EAAEC,IAC/CE,GAAU,GAAEA,EAAKI,KAAM,IAAGJ,EAAKK,YAAa,EAC/C,EACM,CAACsM,EAAMnE,EAAM3H,CAAI,EAAIyU,GAAGzD,OAAOwB,EAASxB,IAAU,EAAK,EACvDhS,EAAUsD,OAAOoS,OAAO/S,EAAKO,MAAMlD,OAAO,EAC1C2V,EAAU7I,GAAM7M,IAAK6I,GAAQ9I,EAAQ8I,CAAG,CAAC,GAAG3G,MAAM,EAAGqH,EAAO,CAAA,GAAK,CAAA,EACvE0L,GAAWS,CAAO,CAAA,KACb,CACD,GAAA,CAAChT,EAAKO,MAAMlD,QAAS,OACzBkV,GACE5R,OAAOoS,OAAO/S,EAAKO,MAAMlD,OAAO,EAAEgB,KAAKA,CAAI,EAAEmB,MAAM,EAAGqH,EAAAA,CAAO,CAC/D,CACF,CAAA,CACD,EAED,MAAMoM,EAAgBA,IAAM,CAC1B,MAAM5V,EAAUsD,OAAOoS,OAAO/S,EAAKO,MAAMlD,OAAO,EAC1C6V,EAAW/V,KAAKgW,UACpB,CACEC,SAAU,UACVC,QAAS,EACThW,QAAAA,CAAAA,EAEF,KACA,CACF,EACMiW,EAAO,IAAIC,KAAK,CAACL,CAAQ,EAAG,CAAEM,KAAM,kBAAA,CAAoB,EACxD/V,EAAMgW,IAAIC,gBAAgBJ,CAAI,EAC9BhV,EAAIqV,SAASC,cAAc,GAAG,EACpCtV,EAAEuV,KAAOpW,EACT,MAAMqW,EAAY,mBAAkB,IAAI5V,KAAK,EAAE6V,aAAoB,QACnEzV,EAAE0V,SAAWF,EACbxV,EAAE2V,MAAM,EACRR,IAAIS,gBAAgBzW,CAAG,CAAA,EAEnB,CAAC0W,EAAiBC,CAAkB,EAAIrY,EAAa,EAAK,EAC1D,CAACsY,EAAoBC,CAAqB,EAAIvY,EAAa,EAAE,EAC7D,CAACwY,EAASC,EAAU,EAAIzY,EAAa,EAAK,EAChBA,OAAAA,EAAa,EAAK,GAElD,IAAA,CAAA,IAAA6F,EAAAC,GAAA4S,EAAA,EAAA7R,EAAAhB,EAAAI,WAAA,CAAA0S,EAAAC,CAAA,EAAAC,GAAAhS,EAAAV,WAAA,EAAA2S,EAAAH,EAAAxS,YAAA,CAAA4S,EAAAC,CAAA,EAAAH,GAAAC,EAAA3S,WAAA,EAAA8S,GAAAF,EAAA5S,YAAA,CAAA+S,GAAAC,EAAA,EAAAN,GAAAI,GAAA9S,WAAA,EAAAiT,GAAAF,GAAA/S,YAAA,CAAAkT,EAAAC,CAAA,EAAAT,GAAAO,GAAAjT,WAAA,EAAAoT,EAAAF,EAAAlT,YAAA,CAAAqT,EAAAC,CAAA,EAAAZ,GAAAU,EAAApT,WAAA,EAAAuT,EAAAF,EAAArT,YAAA,CAAAwT,EAAAC,CAAA,EAAAf,GAAAa,EAAAvT,WAAA,EAAA0T,GAAAF,EAAAxT,YAAA,CAAA2T,EAAAC,CAAA,EAAAlB,GAAAgB,GAAA1T,WAAA,EAAAQ,EAAAmT,EAAA3T,YAAAN,OAAAA,EAAAA,EAAAL,EAEKwU,GAAK,CAAApU,SAAA,mBAAA,CAAA+S,EAAAA,EAAAC,CAAA,EAAA/S,EAAAA,EAAAL,EACLyU,GAAM,CAACC,MAAK,SAAUC,QAASA,IAAMzD,EAAmB,EAAI,CAAA,CAACqC,EAAAA,EAAAC,CAAA,EAAAnT,EAAAA,EAAAL,EAC7D5F,GAAkB,CAAA,IACjB8F,QAAM,CAAA,OAAE+Q,GAAgB,CAAC,EACzB9Q,UAAuBD,GAAA,CACbzE,QAAAA,IAAIyE,EAAQ,WAAW,EAC/BgR,EAAmBhR,CAAM,CAC3B,CAAA,CAACwT,EAAAA,GAAAC,EAAA,EAAAtT,EAAAA,EAAAL,EAEFyU,GAAM,CAACC,MAAK,SAAUC,QAASjD,CAAAA,CAAamC,EAAAA,EAAAC,CAAA,EAAAzT,EAAAA,EAAAL,EAC5CyU,GAAM,CAACC,MAAK,QAASC,QAASA,IAAM9B,EAAmB,EAAI,CAAA,CAACmB,EAAAA,EAAAC,CAAA,EAAA5T,EAAAA,EAAAL,EAC5DC,GAAK,CACJ5D,MAAK,kBAAA,IACL6D,QAAM,CAAA,OAAE0S,EAAgB,CAAC,EACzBzS,UAAW0S,EAAkB,IAAAzS,UAAA,CAAAI,IAAAA,EAAAF,GAAAwB,EAAA,EAAApB,EAAAF,EAAAC,WAAAG,EAAAF,EAAAC,YAAAM,EAAAL,EAAAH,WAAA,CAAAS,EAAA0T,CAAA,EAAAvB,GAAApS,EAAAN,WAAA,EAAAE,EAAAK,EAAAP,YAAAG,EAAAD,EAAAJ,WAAA,CAAAM,EAAA8T,EAAA,EAAAxB,GAAAvS,EAAAH,WAAA,EAAAkB,GAAAd,EAAAJ,YAAA,CAAAK,GAAA8T,CAAA,EAAAzB,GAAAxR,GAAAlB,WAAA,EAAAC,OAAAA,EAAAA,EAAAZ,EAKxB+U,GAAK,CAAA,MAAA,OAAA,IAEJrT,OAAK,CAAA,OAAEoR,EAAmB,CAAC,EAC3BkC,QAAgB9P,IAAA,CACd+N,GAAW,EAAK,EAChBF,EAAsB7N,EAAC,CACzB,EACA+M,KAAI,OAAA,IACJgD,cAAY,CAAA,OACVnC,EAAmB,IAAM,UAAYE,EAAAA,EACjC,8BACA,EAAE,EAERkC,YAAW,SACX1Y,KAAI,yBAAA,IACJ2Y,iBAAe,CACbrC,OAAAA,EAAyB,IAAA,SAAW,UAAY,OAAO,CAAA,CAAA5R,EAAAA,EAAA0T,CAAA,EAAA/T,EAAAA,EAAAb,EAIxDyU,GAAM,CACLC,MAAK,SACLC,QAASA,IAAM9B,EAAmB,EAAK,CAAA,CAAC9R,EAAAA,EAAA8T,EAAA,EAAAhU,EAAAA,EAAAb,EAEzCyU,GAAM,CACLC,MAAK,SAAA,MAAA,OAELC,QAASA,IAAM,CACb1B,GAAW,EAAI,EACXH,MAAyB,WACb3C,IACd0C,EAAmB,EAAK,EAE5B,CAAA,CAAC7R,EAAAA,GAAA8T,CAAA,EAAAtU,CAAA,CAAA,CAAA2T,EAAAA,EAAAC,CAAA,EAAA/T,EAAAA,EAAAL,EAMV+U,GAAK,CACJC,QAAgB5D,GAAAA,EAAmBxS,CAAC,EAAC,MAAA,eAErCsW,YAAW,WAAA,CAAAZ,EAAAA,EAAAC,CAAA,EAAApT,EAAAA,EAAAnB,EAGV2B,GAAI,CAAA,IAACC,MAAI,CAAA,OAAE9F,GAAQ,CAAC,EAAA,IAAAsE,UAAA,CAAAJ,MAAAA,CAAAA,EAClBoV,GAAG,CAAA,IAACC,MAAI,CAAA,OAAEvZ,GAAQ,CAAC,EAAAsE,SACZJ,GAAAA,EACHsV,GAAS,CAAA,IACRpQ,GAAC,CAAE,MAAA,CACD,GAAGjJ,EACHC,IAAM,YAAWgD,GAAWjD,CAAI,CAAE,EAAA,CACnC,CAAA,CAAA,CAEJ,CAAA,GAAA,IAAA,CAAAmF,IAAAA,EAAAd,GAAAC,EAAA,EAAAiB,OAAAA,GAGa+O,GAAAA,EAAmBgF,CAAG,EAACnU,CAAA,EAAAA,KAAA,CAAA,CAAA,CAAA,CAAA,EAAAf,CAAAA,IAOjD","x_google_ignoreList":[1]}