{"version":3,"file":"import-BFmf27NF.js","sources":["../../../../../src/components/Toggle.tsx","../../../../../src/routes/import.tsx?pick=default&pick=$css"],"sourcesContent":["\nexport default function Toggle({ label, onChange, checked }:{ label: string; onChange: () => void, checked: boolean }) {\n  return (\n    <label for={label} class=\"flex cursor-pointer items-center \">\n      <div class=\"relative focus-within:ring-4 rounded-full ring-primary p-1\">\n        <input checked={checked} onChange={onChange} type=\"checkbox\" id={label} class=\"peer sr-only\" />\n        <div class=\"peer-checked:ring-bg2 block h-8 w-14 rounded-full bg-bg1 ring-2 ring-bg3 focus:ring-4 focus:ring-primary peer-checked:bg-primary\"></div>\n        <div class=\"absolute left-2 top-2 h-6 w-6 rounded-full bg-bg3 shadow shadow-black/50 transition duration-200 peer-checked:translate-x-full peer-checked:bg-accent1\"></div>\n      </div>\n    </label>\n  );\n};\n","import { createSignal } from \"solid-js\";\nimport Toggle from \"~/components/Toggle\";\nimport { useSyncStore } from \"~/stores/syncStore\";\n\nexport default function Import() {\n  const [subscriptions, setSubscriptions] = createSignal<Record<string, {subscribedAt:number}>>({});\n  const [override, setOverride] = createSignal(false);\n  const selectedSubscriptions = () => Object.keys(subscriptions()).length;\n  const sync = useSyncStore();\n  sync.store.subscriptions\n  let fileSelector: HTMLInputElement | undefined = undefined;\n  function fileChange() {\n    console.log(\"fileChange\", fileSelector?.files?.[0]?.name);\n    if (!fileSelector?.files?.[0]) return;\n    const file = fileSelector.files[0];\n    file.text().then((text) => {\n\n      // Conduit\n      if (text.includes(\"Conduit\")) {\n        console.log(\"Conduit\");\n        const json = JSON.parse(text);\n        console.log(json);\n        setSubscriptions(json.subscriptions);\n        if (json.playlists) {\n          json.playlists.forEach((playlist: any) => {\n            sync.setStore(\"playlists\", playlist.id, playlist);\n            sync.setStore(\"playlists\", playlist.id, \"relatedStreams\", playlist.relatedStreams);\n          });\n        }\n      }\n      // Invidious\n      else if (text.indexOf(\"opml\") != -1) {\n        console.log(\"Invidious\");\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(text, \"text/xml\");\n        xmlDoc.querySelectorAll(\"outline[xmlUrl]\").forEach((item) => {\n          const url = item.getAttribute(\"xmlUrl\");\n          const id = url?.slice(-24);\n          if (id) {\n            setSubscriptions((subs)=>({...subs, [id]: {subscribedAt: Date.now()}}));\n          }\n        });\n      }\n      //LibreTube\n      else if (text.indexOf(\"localSubscriptions\") != -1) {\n        console.log(\"LibreTube\");\n        const json = JSON.parse(text);\n        json.localSubscriptions.forEach((item: any) => {\n          setSubscriptions((subs)=>({...subs, [item.channelId]: {subscribedAt: Date.now()}}));\n        });\n      }\n      // NewPipe\n      else if (text.indexOf(\"app_version\") != -1) {\n        console.log(\"NewPipe\");\n        const json = JSON.parse(text);\n        json.subscriptions\n          .filter((item: any) => item.service_id == 0)\n          .forEach((item: any) => {\n            const url = item.url;\n            const id = url.slice(-24);\n            setSubscriptions((subs)=>({...subs, [id]: {subscribedAt: Date.now()}}));\n          });\n      }\n      // Invidious JSON\n      else if (text.indexOf(\"thin_mode\") != -1) {\n        console.log(\"Invidious JSON\");\n        const json = JSON.parse(text);\n        json.subscriptions.forEach((id: string) => {\n          setSubscriptions((subs) => ({...subs, [id]: {subscribedAt: Date.now()}}));\n        });\n      }\n      // FreeTube DB\n      else if (text.indexOf(\"allChannels\") != -1) {\n        console.log(\"FreeTube DB\");\n        const json = JSON.parse(text);\n        json.subscriptions.forEach((item: any) => {\n          setSubscriptions((subs) => ({...subs, [item.id]: {subscribedAt: Date.now()}}));\n        });\n      }\n      //FreeTube JSON\n      else if (text.indexOf(\"subscriptions\") != -1) {\n        console.log(\"FreeTube JSON\");\n        const json = JSON.parse(text);\n        json.subscriptions.forEach((item: any) => {\n          setSubscriptions((subs) => ({...subs, [item.id]: {subscribedAt: Date.now()}}));\n        });\n      }\n      // Google Takeout JSON\n      else if (text.indexOf(\"contentDetails\") != -1) {\n        console.log(\"Google Takeout JSON\");\n        const json = JSON.parse(text);\n        json.forEach((item: any) => {\n          const id = item.snippet.resourceId.channelId;\n          setSubscriptions((subs) => ({...subs, [id]: {subscribedAt: Date.now()}}));\n        });\n      }\n\n      // Google Takeout CSV\n      else if (\n        file.name.length >= 5 &&\n        file.name.slice(-4).toLowerCase() == \".csv\"\n      ) {\n        console.log(\"Google Takeout CSV\");\n        const lines = text.split(\"\\n\");\n        for (let i = 1; i < lines.length; i++) {\n          const line = lines[i];\n          const id = line.slice(0, line.indexOf(\",\"));\n          if (id.length === 24)\n            setSubscriptions((subs) => ({...subs, [id]: {subscribedAt: Date.now()}}));\n        }\n      }\n    });\n  }\n  function handleImport(e: Event) {\n    e.preventDefault();\n    if (override()) {\n      Object.keys(sync.store.subscriptions).forEach((id) => {\n        sync.setStore(\"subscriptions\", id, undefined!);\n      });\n    }\n\n    console.log(\"subs\", subscriptions(), getLocalSubscriptions());\n\n    try {\n      sync.setStore(\"subscriptions\", subscriptions());\n    } catch (e) {\n      alert(\"Error saving subscriptions\");\n    }\n  }\n  function getLocalSubscriptions() {\n    try {\n      return sync.store.subscriptions;\n    } catch {\n      return [];\n    }\n  }\n  return (\n    <>\n      <div class=\"text-center\">\n        <form>\n          <div>\n            <input ref={fileSelector} type=\"file\" onInput={fileChange} />\n          </div>\n          <div>\n            <strong>\n              {`Selected Subscriptions: ${selectedSubscriptions()}`}{\" \"}\n            </strong>\n          </div>\n          <div class=\"flex items-center justify-center my-2 gap-2\" >\n              Override{\" \"}\n               <Toggle\n                label=\"Override\"\n                checked={override()}\n                onChange={() => setOverride(!override())}\n              /> \n          </div>\n          <div>\n            <button class=\"btn w-auto\" onClick={handleImport}>\n              Import\n            </button>\n          </div>\n        </form>\n        <br />\n        <strong>Importing Subscriptions from YouTube</strong>\n        <br />\n        <div>\n          Open\n          <a href=\"https://takeout.google.com/takeout/custom/youtube\">\n            takeout.google.com/takeout/custom/youtube\n          </a>\n          <br />\n          In \"Select data to include\", click on \"All YouTube data included\" and\n          select only \"subscriptions\".\n          <br />\n          Create the export and download the zip file.\n          <br />\n          Extract subscriptions.csv from the zip file.\n          <br />\n          Select and import the file above.\n        </div>\n        <br />\n        <strong>Importing Subscriptions from Invidious</strong>\n        <br />\n        <div>\n          Open\n          <a href=\"https://invidio.us/data_control\">invidiou.us/data_control</a>\n          <br />\n          Click on any of the export options.\n          <br />\n          Select and import the file above.\n        </div>\n        <br />\n        <strong>Importing Subscriptions from NewPipe</strong>\n        <br />\n        <div>\n          Go to the Feed tab.\n          <br />\n          Click on the arrow on where it says \"Subscriptions\".\n          <br />\n          Save the file somewhere.\n          <br />\n          Select and import the file above.\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":["Toggle","label","onChange","checked","_el$","_$getNextElement","_tmpl$","_el$2","firstChild","_el$3","Import","subscriptions","setSubscriptions","createSignal","override","setOverride","selectedSubscriptions","Object","keys","length","sync","useSyncStore","store","fileSelector","fileChange","console","log","files","name","file","text","then","includes","json","JSON","parse","playlists","forEach","playlist","setStore","id","relatedStreams","indexOf","DOMParser","parseFromString","querySelectorAll","item","getAttribute","slice","subs","subscribedAt","Date","now","localSubscriptions","channelId","filter","service_id","url","snippet","resourceId","toLowerCase","lines","split","i","line","handleImport","e","preventDefault","undefined","getLocalSubscriptions","alert","_el$4","_el$5","nextSibling","_el$6","_el$8","_el$9","_co$","_$getNextMarker","_el$10","_el$11","_el$13","_el$14","_co$2","_el$15","_el$16","$$input","_ref$","_$use","_$insert","_$createComponent","$$click","_$runHydrationEvents","_$delegateEvents"],"mappings":"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"}