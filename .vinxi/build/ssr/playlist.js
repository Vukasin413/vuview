import{createComponent as r,ssr as y,ssrHydrationKey as h,escape as p}from"solid-js/web";import{createSignal as g,createEffect as u,Show as d,For as v}from"solid-js";import{E as w,A as x}from"./assets/syncStore-DaflpWzS.js";import{createQuery as P}from"@tanstack/solid-query";import{P as S}from"./assets/PlaylistItem-DrQzDyGy.js";import{T as q}from"./assets/index-BIuKkAdd.js";import{h as b}from"./assets/routing-CB9zsxEG.js";import"y-webrtc";import"yjs";import"solid-js/store";import"./assets/Link-ClDVT-6o.js";import"./assets/components-Bl9pqdE7.js";import"lib0/observable";import"./assets/index-BPtxG8PX.js";import"./assets/index-wr7A5cEE.js";import"numeral";import"@solid-primitives/date";import"./assets/index-Bhsy5eyg.js";var L=["<div",' class="max-w-5xl mx-auto"><h1 class="text-2xl font-bold mb-4">','</h1><div class="grid grid-cols-1 gap-4 ">',"</div></div>"];function G(){const[i,o]=g(),a=b(),n=()=>a.query.list?.startsWith("conduit-"),t=a.query.list,l=w(),[c]=x();u(async()=>{if(!t||!n())return;await new Promise(e=>setTimeout(e,100));const s=l.store.playlists[t];o(s)});const m=P(()=>({queryKey:["playlist"],queryFn:async()=>(await fetch(c.instance.api_url+"/playlists/"+t)).json(),enabled:!!(c.instance.api_url&&!n()&&t)}));return u(()=>{m.data&&o(m.data)}),[r(q,{get children(){return i()?i().name:"Playlist"}}),r(d,{get when(){return i()},keyed:!0,children:s=>y(L,h(),p(i().name),p(r(d,{get when(){return s.relatedStreams.length>0},get children(){return r(v,{get each(){return s.relatedStreams.filter(e=>!l.store.blocklist[e?.uploaderUrl?.split("/").pop()])},children:(e,f)=>r(S,{active:"",v:e,get index(){return f()+1},list:t})})}})))})]}export{G as default};
//# sourceMappingURL=playlist.js.map
