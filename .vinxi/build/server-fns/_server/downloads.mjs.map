{"version":3,"file":"downloads.mjs","sources":["../../../../src/routes/library/downloads.tsx?pick=default&pick=$css"],"sourcesContent":["import { createEffect, createSignal, For } from \"solid-js\";\nimport VideoCard from \"~/components/content/stream/VideoCard\";\nimport { usePreferences } from \"~/stores/preferencesStore\";\nimport { PipedVideo } from \"~/types\";\nimport { generateThumbnailUrl, getVideoId } from \"~/utils/helpers\";\n\nexport default function Downloads() {\n  const [videos, setVideos] = createSignal<Array<PipedVideo>>([]);\n  const [preferences] = usePreferences();\n  createEffect(async () => {\n    const root = await navigator.storage.getDirectory();\n    console.log(root, Object.keys(root));\n    const downloaded = JSON.parse(localStorage.getItem(\"downloaded\") || \"[]\");\n    for (const id of downloaded) {\n      const dir = await root.getDirectoryHandle(id, { create: false });\n      if (!dir) continue;\n      console.log(dir);\n      const stream = await dir.getFileHandle(\"streams.json\", { create: false });\n      if (!stream) continue;\n      const file = await stream.getFile();\n      const json = await file.text();\n      const data = JSON.parse(json);\n      console.log(data);\n      setVideos((v) => [...v, { ...data, id }]);\n    }\n  });\n  return (\n    <>\n      <h1 class=\"text-xl\">Downloads</h1>\n      <div class=\"flex flex-wrap justify-center\">\n        <For each={videos()}>\n          {(video) => (\n            <VideoCard\n              v={{\n                ...video,\n                url: `/watch?v=${getVideoId(video)}`,\n                type: \"stream\",\n                thumbnail: video.thumbnailUrl,\n                uploaderName: video.uploader,\n                uploadedDate: video.uploadDate,\n                shortDescription: \"\",\n                uploaded: new Date(video.uploadDate).getTime(),\n                isShort: false,\n              }}\n            />\n          )}\n        </For>\n      </div>\n    </>\n  );\n}\n"],"names":["Downloads","videos","setVideos","createSignal","usePreferences","createEffect","root","navigator","storage","getDirectory","console","log","Object","keys","downloaded","JSON","parse","localStorage","getItem","id","dir","getDirectoryHandle","create","stream","getFileHandle","json","getFile","text","data","v","_$ssr","_tmpl$","_$ssrHydrationKey","_tmpl$2","_$escape","_$createComponent","For","each","children","VideoCard","video","url","getVideoId","type","thumbnail","thumbnailUrl","uploaderName","uploader","uploadedDate","uploadDate","shortDescription","uploaded","Date","getTime","isShort"],"mappings":"qjBAMA,SAAwBA,GAAY,CAClC,KAAM,CAACC,EAAQC,CAAS,EAAIC,EAAgC,CAAE,CAAA,EACxCC,OAAAA,EAAe,EACrCC,EAAa,SAAY,CACvB,MAAMC,EAAO,MAAMC,UAAUC,QAAQC,aAAa,EAClDC,QAAQC,IAAIL,EAAMM,OAAOC,KAAKP,CAAI,CAAC,EACnC,MAAMQ,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,YAAY,GAAK,IAAI,EACxE,UAAWC,KAAML,EAAY,CAC3B,MAAMM,EAAM,MAAMd,EAAKe,mBAAmBF,EAAI,CAAEG,OAAQ,EAAA,CAAO,EAC/D,GAAI,CAACF,EAAK,SACVV,QAAQC,IAAIS,CAAG,EACf,MAAMG,EAAS,MAAMH,EAAII,cAAc,eAAgB,CAAEF,OAAQ,EAAA,CAAO,EACxE,GAAI,CAACC,EAAQ,SAEPE,MAAAA,EAAO,MADA,MAAMF,EAAOG,WACFC,OAClBC,EAAOb,KAAKC,MAAMS,CAAI,EAC5Bf,QAAQC,IAAIiB,CAAI,EACLC,EAAAA,GAAM,CAAC,GAAGA,EAAG,CAAE,GAAGD,EAAMT,GAAAA,CAAI,CAAA,CAAC,CAC1C,CAAA,CACD,EACD,CAAAW,EAAAC,EAAAC,KAAAF,EAAAG,EAAAD,EAAAE,EAAAA,EAAAC,EAIOC,EAAG,CAAA,IAACC,MAAI,CAAA,OAAEpC,EAAO,CAAC,EAAAqC,SACVH,GAAAA,EACJI,EAAS,CAAA,IACRV,GAAC,CAAE,MAAA,CACD,GAAGW,EACHC,IAAiBC,YAAAA,EAAWF,CAAK,CAAG,GACpCG,KAAM,SACNC,UAAWJ,EAAMK,aACjBC,aAAcN,EAAMO,SACpBC,aAAcR,EAAMS,WACpBC,iBAAkB,GAClBC,SAAU,IAAIC,KAAKZ,EAAMS,UAAU,EAAEI,QAAQ,EAC7CC,QAAS,EAAA,CACV,CAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CAKX"}